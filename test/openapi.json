{
    "components": {
        "schemas": {
            "AWSDirectConnectConnection": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Connection"
                    },
                    {
                        "properties": {
                            "awsAccountId": {
                                "description": "The AWS Account ID, a 12-digit number that you use to construct Amazon Resource Names (ARNs).",
                                "example": "248422234000",
                                "pattern": "^\\d{12}$",
                                "type": "string"
                            },
                            "awsRegion": {
                                "description": "The AWS Region for the connection. This has been deprecated in favor of cloudRegion.",
                                "example": "us-west-2",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            },
                            "bfd": {
                                "$ref": "#/components/schemas/BFDConfiguration"
                            },
                            "bgpAlertPercent": {
                                "description": "The percentage of BGP routes of the maximum before we start alerting.",
                                "format": "int32",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            },
                            "bgpMaximumPrefix": {
                                "description": "The maximum number of BGP route prefixes to advertise.",
                                "format": "int32",
                                "maximum": 4000,
                                "minimum": 10,
                                "type": "integer"
                            },
                            "bgpPasswordConfiguration": {
                                "$ref": "#/components/schemas/BGPPasswordConfiguration"
                            },
                            "bgpRestartInterval": {
                                "description": "The interval number of minutes after BGP shutdown that we will wait before attempting to bring up BGP.",
                                "format": "int32",
                                "maximum": 10,
                                "minimum": 1,
                                "type": "integer"
                            },
                            "cloudRegion": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "cloudServices": {
                                "description": "The asset link for the clouds services associated with this connection.",
                                "example": [
                                    {
                                        "href": "/cloudServices/aws-s3-us-east-2",
                                        "id": "aws-s3-us-east-2",
                                        "title": "AWS S3 us-east-2"
                                    },
                                    {
                                        "href": "/cloudServices/aws-s3-us-west-1",
                                        "id": "aws-s3-us-west-1",
                                        "title": "AWS S3 us-west-1"
                                    },
                                    {
                                        "href": "/cloudServices/aws-s3-us-west-2",
                                        "id": "aws-s3-us-west-2",
                                        "title": "AWS S3 us-west-2"
                                    },
                                    {
                                        "href": "/cloudServices/aws-s3-us-east-1",
                                        "id": "aws-s3-us-east-1",
                                        "title": "AWS S3 us-east-1"
                                    },
                                    {
                                        "href": "/cloudServices/aws-s3-us-gov-west-1",
                                        "id": "aws-s3-us-gov-west-1",
                                        "title": "AWS S3 us-gov-west-1"
                                    },
                                    {
                                        "href": "/cloudServices/aws-s3-us-gov-east-1",
                                        "id": "aws-s3-us-gov-east-1",
                                        "title": "AWS S3 us-gov-east-1"
                                    }
                                ],
                                "externalDocs": {
                                    "description": "Cloud Services",
                                    "url": "TBD"
                                },
                                "items": {
                                    "$ref": "#/components/schemas/Link"
                                },
                                "type": "array",
                                "uniqueItems": true
                            },
                            "cloudServicesPrefixWhitelist": {
                                "description": "The whitelisted cloud services CIDR blocks.",
                                "example": [
                                    "15.193.7.0/24",
                                    "15.254.0.0/16",
                                    "15.177.80.0/24",
                                    "100.20.0.0/14"
                                ],
                                "items": {
                                    "type": "string"
                                },
                                "type": "array",
                                "uniqueItems": true
                            },
                            "peering": {
                                "$ref": "#/components/schemas/PeeringConfiguration"
                            },
                            "primaryVlan": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "secondaryVlan": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Connection using AWS Direct Connect.",
                "required": [
                    "awsAccountId",
                    "billingTerm",
                    "highAvailability",
                    "location",
                    "name",
                    "speed",
                    "type"
                ],
                "type": "object"
            },
            "AccessSwitch": {
                "description": "Access switch installed in a Pureport pod.",
                "properties": {
                    "availabilityDomain": {
                        "$ref": "#/components/schemas/AvailabilityDomain"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the access switch.",
                        "example": "us-dal-1a-as1",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "pod": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "status": {
                        "$ref": "#/components/schemas/AccessSwitchStatus"
                    }
                },
                "required": [
                    "availabilityDomain",
                    "id",
                    "pod",
                    "status"
                ],
                "type": "object"
            },
            "AccessSwitchPort": {
                "description": "A port provided on a Pureport Access Switch",
                "properties": {
                    "accessSwitch": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "connectorType": {
                        "$ref": "#/components/schemas/AccessSwitchPortConnectorType"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the access switch port.",
                        "example": "us-dal-1a-as1-swp39",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mediaType": {
                        "description": "The media type.",
                        "example": "SMF",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the port.",
                        "example": "spw39",
                        "type": "string"
                    },
                    "patchPanelId": {
                        "description": "The patch panel identifier.",
                        "example": "DA2-02-002366-0113|PP:0113:1205890",
                        "type": "string"
                    },
                    "patchPanelPortNumbers": {
                        "description": "The list of port numbers on the patch panel.",
                        "example": [
                            53
                        ],
                        "items": {
                            "description": "The list of port numbers on the patch panel.",
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array",
                        "uniqueItems": true
                    },
                    "speed": {
                        "$ref": "#/components/schemas/PortSpeed"
                    }
                },
                "required": [
                    "accessSwitch",
                    "connectorType",
                    "id",
                    "mediaType",
                    "name",
                    "patchPanelId",
                    "patchPanelPortNumbers",
                    "speed"
                ],
                "type": "object"
            },
            "AccessSwitchPortConnectorType": {
                "description": "The connector type.",
                "enum": [
                    "SC",
                    "LC"
                ],
                "example": "LC",
                "type": "string"
            },
            "AccessSwitchStatus": {
                "description": "The current status of the access switch.",
                "enum": [
                    "AVAILABLE",
                    "UNAVAILABLE"
                ],
                "type": "string"
            },
            "Account": {
                "description": "A Pureport Account",
                "properties": {
                    "demo": {
                        "description": "Whether this account is for demonstration purposes.",
                        "type": "boolean"
                    },
                    "description": {
                        "description": "The description.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "hasChildren": {
                        "description": "Whether this account is a parent account for any other accounts.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the account.",
                        "example": "ac-9ntgDlC2sW6TISmceo-Xsg",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "description": "The name.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "pricingHidden": {
                        "description": "Whether pricing information is restricted on this account.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "showChildAccountPricing": {
                        "description": "Whether to show pricing information to child accounts of this account.",
                        "type": "boolean"
                    },
                    "supportedConnectionGroups": {
                        "description": "A collection of asset links for which Supported Connection Groups this account has access to.",
                        "example": [
                            {
                                "href": "/supportedConnections/groups/default",
                                "id": "default"
                            },
                            {
                                "href": "/supportedConnections/groups/portConnections",
                                "id": "portConnections"
                            }
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "type": "array",
                        "uniqueItems": true
                    },
                    "tags": {
                        "additionalProperties": {
                            "description": "Key-value pairs to associate with the Pureport asset.",
                            "type": "string"
                        },
                        "description": "Key-value pairs to associate with the Pureport asset.",
                        "type": "object"
                    },
                    "technicalContactEmails": {
                        "description": "Email addresses of technical contacts for this account.",
                        "example": [
                            "admin@email.com"
                        ],
                        "items": {
                            "description": "Email addresses of technical contacts for this account.",
                            "example": "[\"admin@email.com\"]",
                            "type": "string"
                        },
                        "maxItems": 10,
                        "minItems": 0,
                        "type": "array",
                        "uniqueItems": true
                    },
                    "verified": {
                        "description": "Whether this account has been verified by Pureport operations.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "AccountBilling": {
                "description": "Billing information for a Pureport account.",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "address": {
                        "$ref": "#/components/schemas/PhysicalAddress"
                    },
                    "allowChildAccounts": {
                        "description": "Whether this billing information can be used for child accounts.",
                        "type": "boolean"
                    },
                    "bankAccountLastFour": {
                        "description": "The last four digits of a bank account.",
                        "example": "1234",
                        "pattern": "^\\d{4}$",
                        "type": "string"
                    },
                    "bankAccountType": {
                        "description": "The bank account owner type.",
                        "enum": [
                            "INDIVIDUAL",
                            "COMPANY"
                        ],
                        "type": "string"
                    },
                    "bankRoutingNumber": {
                        "description": "The bank routing number.",
                        "example": "110000000",
                        "pattern": "^\\d{9}$",
                        "type": "string"
                    },
                    "collectionMethod": {
                        "$ref": "#/components/schemas/BillingCollectionMethod"
                    },
                    "email": {
                        "description": "The email address invoices should be sent to.",
                        "example": "john.doe@email.com",
                        "type": "string"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the credit card user.",
                        "example": "John Doe",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "stripeExpiry": {
                        "description": "The month and year of a credit card's expiration date.",
                        "example": "06/2026",
                        "pattern": "^\\d{2}/\\d{4}$",
                        "type": "string"
                    },
                    "stripeLastFour": {
                        "description": "The last four digits of a credit card.",
                        "example": "1234",
                        "pattern": "^\\d{4}$",
                        "type": "string"
                    },
                    "stripeToken": {
                        "description": "A token provided by Stripe to represent a credit card or bank account.",
                        "externalDocs": {
                            "description": "Stripe token",
                            "url": "https://stripe.com/docs/api/tokens"
                        },
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "verified": {
                        "description": "Whether this billing information has been verified.",
                        "readOnly": true,
                        "type": "boolean"
                    }
                },
                "required": [
                    "account",
                    "address",
                    "collectionMethod",
                    "email",
                    "name"
                ],
                "type": "object"
            },
            "AccountBillingVerification": {
                "description": "Verification details for billing information for a Pureport account.",
                "properties": {
                    "microdeposits": {
                        "description": "The amounts in cents of microdeposits made into a bank account.",
                        "items": {
                            "description": "The amounts in cents of microdeposits made into a bank account.",
                            "format": "int64",
                            "type": "integer"
                        },
                        "type": "array",
                        "uniqueItems": true
                    }
                },
                "type": "object"
            },
            "AccountConsent": {
                "description": "Status of an account of consent to the Terms of Service and Acceptable Use Policy",
                "properties": {
                    "consentAt": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "href": {
                        "type": "string"
                    },
                    "userId": {
                        "description": "The id of the user who has read and accepted Pureport's legal documentation.",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AccountDetailedInvoice": {
                "description": "Detailed breakdown of line items for an invoice.",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "invoiceId": {
                        "description": "The invoice id.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "items": {
                        "description": "The line items for this invoice.",
                        "items": {
                            "$ref": "#/components/schemas/DetailedInvoiceItem"
                        },
                        "readOnly": true,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AccountInvite": {
                "description": "An invitation for a user to join a Pureport account.",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "email": {
                        "description": "The email address of the user being invited to the Pureport account.",
                        "example": "user@example.com",
                        "type": "string"
                    },
                    "expired": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the invite.",
                        "example": "invite-6amoEOCGszlKvXb2LYrbGw",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "invitedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "invitedBy": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "roles": {
                        "description": "The Pureport roles the invited user will have permissions for on the account.",
                        "example": [
                            {
                                "href": "/accounts/ac-9ntgDlC2sW6TISmceo-Xsg/roles/role-Hlzbibun6IqFpRs1nEALGA",
                                "id": "role-Hlzbibun6IqFpRs1nEALGA",
                                "title": "Admin"
                            }
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "account",
                    "email",
                    "roles"
                ],
                "type": "object"
            },
            "AccountInvoice": {
                "description": "Invoice for a Pureport account.",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "invoice": {
                        "description": "The Stripe Invoice object.",
                        "externalDocs": {
                            "description": "Stripe Invoice",
                            "url": "https://stripe.com/docs/api/invoices/object"
                        },
                        "readOnly": true,
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "AccountMember": {
                "description": "Details of a user's membership to a particular account.",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "roles": {
                        "description": "The asset links for the roles this user has permissions for in this account.",
                        "example": [
                            {
                                "href": "/accounts/ac-9ntgDlC2sW6TISmceo-Xsg/roles/role-Hlzbibun6IqFpRs1nEALGA",
                                "id": "role-Hlzbibun6IqFpRs1nEALGA",
                                "title": "Admin"
                            }
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "type": "array"
                    },
                    "user": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "required": [
                    "account",
                    "roles",
                    "user"
                ],
                "type": "object"
            },
            "AccountNotification": {
                "description": "A notification for a particular account.",
                "properties": {
                    "connections": {
                        "description": "A list of asset links of connections this notification applies to.",
                        "example": [
                            {
                                "href": "/connections/conn-pYNNK3E4Yf-nW7yVuxO5mA",
                                "id": "conn-pYNNK3E4Yf-nW7yVuxO5mA",
                                "title": "Connection #1"
                            },
                            {
                                "href": "/connections/conn-kPix31wMxAtHFuWjb3vQ7Q",
                                "id": "conn-kPix31wMxAtHFuWjb3vQ7Q",
                                "title": "Connection #2"
                            }
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "readOnly": true,
                        "type": "array",
                        "uniqueItems": true
                    },
                    "notification": {
                        "$ref": "#/components/schemas/Notification"
                    }
                },
                "type": "object"
            },
            "AccountNotificationStatus": {
                "enum": [
                    "READ",
                    "UNREAD"
                ],
                "type": "string"
            },
            "ApiKey": {
                "description": "Key for authenticating with the Pureport API",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "description": {
                        "description": "The description.",
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "key": {
                        "description": "The public key for authenticating.",
                        "example": "k7F6ga3FEt38b",
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "description": "The name.",
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string"
                    },
                    "roles": {
                        "description": "The Pureport roles users of this API key have permissions for.",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                    },
                    "secret": {
                        "description": "The private secret for authenticating. Note that this field is only populated on creation.",
                        "example": "BIKd3zv6zyf5UeYiv",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "roles"
                ],
                "type": "object"
            },
            "AuditEntry": {
                "description": "Entry in the Pureport audit log.",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "changes": {
                        "description": "The changes to the Pureport entity.",
                        "example": [
                            {
                                "current": "network-M_JqECDuEOWzQMhGnYyicg",
                                "property": "id"
                            },
                            {
                                "current": "My Network",
                                "property": "name"
                            },
                            {
                                "current": "PENDING_CONTROLLERS",
                                "property": "state"
                            }
                        ],
                        "items": {
                            "$ref": "#/components/schemas/ChangeObject"
                        },
                        "readOnly": true,
                        "type": "array",
                        "uniqueItems": true
                    },
                    "correlationId": {
                        "description": "An identifier to group multiple related audit entries.",
                        "example": "081a1b58-4cff-43d5-b648-6b47bb70a31e",
                        "readOnly": true,
                        "type": "string"
                    },
                    "eventType": {
                        "$ref": "#/components/schemas/AuditEntryEventType"
                    },
                    "ipAddress": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "principal": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "request": {
                        "$ref": "#/components/schemas/AuditEntryRequest"
                    },
                    "response": {
                        "$ref": "#/components/schemas/AuditEntryResponse"
                    },
                    "result": {
                        "$ref": "#/components/schemas/AuditEntryResult"
                    },
                    "source": {
                        "$ref": "#/components/schemas/AuditEntrySource"
                    },
                    "subject": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "subjectType": {
                        "$ref": "#/components/schemas/AuditEntrySubjectType"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "userAgent": {
                        "description": "The User-Agent of the request that triggered this entry.",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AuditEntryEventType": {
                "enum": [
                    "USER_LOGIN",
                    "USER_FORGOT_PASSWORD",
                    "API_LOGIN",
                    "ACCOUNT_CREATE",
                    "ACCOUNT_UPDATE",
                    "ACCOUNT_DELETE",
                    "ACCOUNT_BILLING_CREATE",
                    "ACCOUNT_BILLING_UPDATE",
                    "ACCOUNT_BILLING_DELETE",
                    "NETWORK_CREATE",
                    "NETWORK_UPDATE",
                    "NETWORK_DELETE",
                    "CONNECTION_CREATE",
                    "CONNECTION_UPDATE",
                    "CONNECTION_DELETE",
                    "GATEWAY_CREATE",
                    "GATEWAY_UPDATE",
                    "GATEWAY_DELETE",
                    "API_KEY_CREATE",
                    "API_KEY_UPDATE",
                    "API_KEY_DELETE",
                    "ROLE_CREATE",
                    "ROLE_UPDATE",
                    "ROLE_DELETE",
                    "USER_CREATE",
                    "USER_UPDATE",
                    "USER_DELETE",
                    "USER_DOMAIN_CREATE",
                    "USER_DOMAIN_UPDATE",
                    "USER_DOMAIN_DELETE",
                    "PORT_CREATE",
                    "PORT_UPDATE",
                    "PORT_DELETE",
                    "MEMBER_INVITE_CREATE",
                    "MEMBER_INVITE_ACCEPT",
                    "MEMBER_INVITE_UPDATE",
                    "MEMBER_INVITE_DELETE",
                    "ACCOUNT_MEMBER_CREATE",
                    "ACCOUNT_MEMBER_UPDATE",
                    "ACCOUNT_MEMBER_DELETE",
                    "CONNECTION_STATE_CHANGE",
                    "GATEWAY_STATE_CHANGE",
                    "GATEWAY_BGP_STATUS_CHANGE",
                    "GATEWAY_BGP_PREFIX_ALERT_CHANGE",
                    "GATEWAY_IPSEC_STATUS_CHANGE",
                    "NOTIFICATION_CREATE",
                    "NOTIFICATION_UPDATE",
                    "NOTIFICATION_DELETE",
                    "TASK_CREATE",
                    "TASK_UPDATE",
                    "TASK_DELETE"
                ],
                "type": "string"
            },
            "AuditEntryRequest": {
                "description": "The request that triggered this entry.",
                "properties": {
                    "body": {
                        "description": "The body of the request.",
                        "type": "string"
                    },
                    "method": {
                        "description": "The HTTP method of the request.",
                        "type": "string"
                    },
                    "queryParameters": {
                        "additionalProperties": {
                            "description": "The query parameters passed with the request.",
                            "items": {
                                "description": "The query parameters passed with the request.",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "The query parameters passed with the request.",
                        "type": "object"
                    },
                    "url": {
                        "description": "The url of the request.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AuditEntryResponse": {
                "description": "The response to the request that triggered this entry.",
                "properties": {
                    "body": {
                        "description": "The body of the response.",
                        "type": "string"
                    },
                    "executionTime": {
                        "description": "Execution time in milliseconds.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "statusCode": {
                        "description": "The HTTP status code of the response.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "statusCodeFamily": {
                        "description": "The family of the HTTP status code.",
                        "enum": [
                            "INFORMATIONAL",
                            "SUCCESSFUL",
                            "REDIRECTION",
                            "CLIENT_ERROR",
                            "SERVER_ERROR",
                            "OTHER"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AuditEntryResult": {
                "enum": [
                    "SUCCESS",
                    "FAILURE"
                ],
                "type": "string"
            },
            "AuditEntrySource": {
                "description": "The source of the request that triggered this entry.",
                "enum": [
                    "API",
                    "CONSOLE",
                    "SYSTEM"
                ],
                "type": "string"
            },
            "AuditEntrySubjectType": {
                "enum": [
                    "ACCOUNT",
                    "CONNECTION",
                    "NETWORK",
                    "USER",
                    "USER_DOMAIN",
                    "ROLE",
                    "API_KEY",
                    "GATEWAY",
                    "NOTIFICATION",
                    "ACCOUNT_INVITE",
                    "ACCOUNT_BILLING",
                    "PORT",
                    "ACCOUNT_MEMBER",
                    "TASK"
                ],
                "type": "string"
            },
            "AvailabilityDomain": {
                "description": "The availability domain.",
                "enum": [
                    "PRIMARY",
                    "SECONDARY"
                ],
                "type": "string"
            },
            "AzureExpressRouteConnection": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Connection"
                    },
                    {
                        "properties": {
                            "bfd": {
                                "$ref": "#/components/schemas/BFDConfiguration"
                            },
                            "bgpAlertPercent": {
                                "description": "The percentage of BGP routes of the maximum before we start alerting.",
                                "format": "int32",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            },
                            "bgpMaximumPrefix": {
                                "description": "The maximum number of BGP route prefixes to advertise.",
                                "format": "int32",
                                "maximum": 4000,
                                "minimum": 10,
                                "type": "integer"
                            },
                            "bgpPasswordConfiguration": {
                                "$ref": "#/components/schemas/BGPPasswordConfiguration"
                            },
                            "bgpRestartInterval": {
                                "description": "The interval number of minutes after BGP shutdown that we will wait before attempting to bring up BGP.",
                                "format": "int32",
                                "maximum": 10,
                                "minimum": 1,
                                "type": "integer"
                            },
                            "peering": {
                                "$ref": "#/components/schemas/PeeringConfiguration"
                            },
                            "primaryVlan": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "secondaryVlan": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "serviceKey": {
                                "description": "The Azure ExpressRoute service key, a public and unique standard GUID representing identifying the ExpressRoute circuit.",
                                "example": "e28cea0c-de25-4dce-b7d7-d4776d523d4b",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Connection using an Azure Express Route.",
                "required": [
                    "billingTerm",
                    "highAvailability",
                    "location",
                    "name",
                    "serviceKey",
                    "speed",
                    "type"
                ],
                "type": "object"
            },
            "BFDConfiguration": {
                "description": "Bidirectional Forwarding Detection RFC 5880.",
                "properties": {
                    "detectMultiplier": {
                        "description": "The BFD Detect Multiplier [RFC 5880 Section 6.8.12. Detect Multiplier Change].",
                        "format": "int32",
                        "maximum": 255,
                        "minimum": 2,
                        "type": "integer"
                    },
                    "receiveInterval": {
                        "description": "The BFD Receive Interval [RFC 5880 Section 6.8.10. Min Rx Interval Change].",
                        "format": "int32",
                        "maximum": 60000,
                        "minimum": 10,
                        "type": "integer"
                    },
                    "transmitInterval": {
                        "description": "The BFD Transmit Interval [RFC 5880 Section 6.8.11. Min Tx Interval Change].",
                        "format": "int32",
                        "maximum": 60000,
                        "minimum": 10,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "BGPConfig": {
                "description": "BGP Configuration",
                "properties": {
                    "customerASN": {
                        "description": "The ASN of the pureport side of the BGP peering.",
                        "example": 60000,
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "customerIP": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "password": {
                        "description": "The BGP password.",
                        "example": "J9iODBEhm1b9TGRgxdAZ9",
                        "readOnly": true,
                        "type": "string"
                    },
                    "peeringSubnet": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "publicNatIp": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "pureportASN": {
                        "description": "The ASN of the Pureport side of the BGP peering.",
                        "example": 394351,
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "pureportIP": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "state": {
                        "$ref": "#/components/schemas/BGPState"
                    }
                },
                "type": "object"
            },
            "BGPPasswordConfiguration": {
                "description": "The set of configuration options for enabling & managing BGP passwords. If a password is not provided during the connection creation, a password will be automatically generated for you.",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "primaryBGPPassword": {
                        "type": "string"
                    },
                    "secondaryBGPPassword": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BGPRoute": {
                "description": "BGP Route information",
                "properties": {
                    "best": {
                        "description": "Whether the route has been designated as the best route.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "internal": {
                        "description": "Whether the route path origin is internal.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "locPref": {
                        "description": "The local preference assigned to the route.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "metric": {
                        "description": "The metric for the route.",
                        "example": 100,
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "multiPath": {
                        "description": "Whether the route is a multipath route.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "network": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "nextHop": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "nextHopConnection": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "nextHopGateway": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "origin": {
                        "description": "The BGP origin code for the route.",
                        "example": "incomplete",
                        "readOnly": true,
                        "type": "string"
                    },
                    "path": {
                        "description": "List of AS paths for this route.",
                        "example": [
                            16550
                        ],
                        "items": {
                            "description": "List of AS paths for this route.",
                            "format": "int32",
                            "type": "integer"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "valid": {
                        "description": "Whether the route is valid.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "weight": {
                        "description": "The weight assigned to the route.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "BGPState": {
                "description": "The current BGP state.",
                "enum": [
                    "UP",
                    "DOWN",
                    "PENDING"
                ],
                "type": "string"
            },
            "BillingCollectionMethod": {
                "description": "The collection method.",
                "enum": [
                    "CREDIT_CARD",
                    "NET_30",
                    "PULL_ACH"
                ],
                "type": "string"
            },
            "BillingInterval": {
                "description": "The interval on which recurring charges will be charged.",
                "enum": [
                    "ONCE",
                    "DAY",
                    "WEEK",
                    "MONTH",
                    "YEAR"
                ],
                "type": "string"
            },
            "BillingLongHaul": {
                "description": "The long haul configuration for this billing plan.",
                "enum": [
                    "NOT_APPLICABLE",
                    "METRO",
                    "USAGE",
                    "DEDICATED"
                ],
                "type": "string"
            },
            "BillingPlan": {
                "description": "A billing plan for a Pureport asset",
                "properties": {
                    "amount": {
                        "description": "The recurring amount in cents that will be charged on the billing interval.",
                        "type": "number"
                    },
                    "billingInterval": {
                        "$ref": "#/components/schemas/BillingInterval"
                    },
                    "billingLongHaul": {
                        "$ref": "#/components/schemas/BillingLongHaul"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the billing plan.",
                        "type": "string"
                    },
                    "setupAmount": {
                        "description": "The nonrecurring amount in cents that will be charged on activation of the Pureport asset.",
                        "type": "number"
                    },
                    "term": {
                        "$ref": "#/components/schemas/BillingTerm"
                    }
                },
                "required": [
                    "billingInterval",
                    "term"
                ],
                "type": "object"
            },
            "BillingProvider": {
                "description": "The provider used for billing this connection.",
                "enum": [
                    "STRIPE"
                ],
                "type": "string"
            },
            "BillingTerm": {
                "description": "The minimum length of time a Pureport asset is licensed for at the specified amount.",
                "enum": [
                    "HOURLY",
                    "MONTHLY",
                    "ONE_YEAR",
                    "TWO_YEAR"
                ],
                "type": "string"
            },
            "ChangeObject": {
                "description": "The changes to the Pureport entity.",
                "example": [
                    {
                        "current": "network-M_JqECDuEOWzQMhGnYyicg",
                        "property": "id"
                    },
                    {
                        "current": "My Network",
                        "property": "name"
                    },
                    {
                        "current": "PENDING_CONTROLLERS",
                        "property": "state"
                    }
                ],
                "properties": {
                    "current": {
                        "type": "object"
                    },
                    "previous": {
                        "type": "object"
                    },
                    "property": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ClosedRangeInstant": {
                "description": "The time ranges billed for this Pureport entity.",
                "properties": {
                    "empty": {
                        "type": "boolean"
                    },
                    "endInclusive": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "start": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CloudProvider": {
                "description": "The provider for this region.",
                "enum": [
                    "AWS",
                    "AZURE",
                    "GOOGLE_CLOUD",
                    "ORACLE",
                    "PACKET_FABRIC"
                ],
                "type": "string"
            },
            "CloudRegion": {
                "description": "Cloud provided infrastructure region.",
                "properties": {
                    "displayName": {
                        "description": "The name of this cloud region.",
                        "example": "US East (N. Virginia)",
                        "type": "string"
                    },
                    "geoCoordinates": {
                        "$ref": "#/components/schemas/GeoCoordinates"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the cloud region.",
                        "example": "aws-us-east-1",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "provider": {
                        "$ref": "#/components/schemas/CloudProvider"
                    },
                    "providerAssignedId": {
                        "description": "The provider-assigned identifier of the region.",
                        "example": "us-east-1",
                        "type": "string"
                    }
                },
                "required": [
                    "displayName",
                    "provider",
                    "providerAssignedId"
                ],
                "type": "object"
            },
            "CloudService": {
                "description": "A cloud-provided service networking configuration",
                "properties": {
                    "cloudRegion": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "deactivated": {
                        "description": "Whether this cloud service configuration has been deactivated.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "deactivatedAt": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the cloud service.",
                        "example": "aws-s3-us-east-1",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "ipPrefixes": {
                        "description": "The network CIDRs associated with this cloud service configuration.",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "type": "array",
                        "uniqueItems": true
                    },
                    "ipv4PrefixCount": {
                        "description": "The count of IPv4 CIDRs associated with this cloud service configuration.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "ipv6PrefixCount": {
                        "description": "The count of IPv6 CIDRs associated with this cloud service configuration.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the cloud service configuration.",
                        "example": "AWS S3 us-east-1",
                        "type": "string"
                    },
                    "provider": {
                        "$ref": "#/components/schemas/CloudProvider"
                    },
                    "service": {
                        "description": "The service name.",
                        "example": "S3",
                        "type": "string"
                    }
                },
                "required": [
                    "cloudRegion",
                    "deactivated",
                    "name",
                    "provider",
                    "service"
                ],
                "type": "object"
            },
            "Connection": {
                "description": "Base for all Pureport Connections.",
                "discriminator": {
                    "mapping": {
                        "AWS_DIRECT_CONNECT": "#/components/schemas/AWSDirectConnectConnection",
                        "AZURE_EXPRESS_ROUTE": "#/components/schemas/AzureExpressRouteConnection",
                        "COMCAST": "#/components/schemas/GenericConnection",
                        "COX_COMMUNICATIONS": "#/components/schemas/GenericConnection",
                        "ELEMENT_CRITICAL": "#/components/schemas/GenericConnection",
                        "EQUINIX_CLOUD_EXCHANGE": "#/components/schemas/EquinixCloudExchangeConnection",
                        "GOOGLE_CLOUD_INTERCONNECT": "#/components/schemas/GoogleCloudInterconnectConnection",
                        "ORACLE_FAST_CONNECT": "#/components/schemas/OracleFastConnectConnection",
                        "PACKET": "#/components/schemas/GenericConnection",
                        "PACKET_FABRIC": "#/components/schemas/PacketFabricConnection",
                        "PORT": "#/components/schemas/PortConnection",
                        "SITE_IPSEC_VPN": "#/components/schemas/SiteIPSecVPNConnection",
                        "ZAYO": "#/components/schemas/GenericConnection"
                    },
                    "propertyName": "type"
                },
                "properties": {
                    "activeAt": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "advertiseInternalRoutes": {
                        "description": "If the connection is advertising internal routes, which allows the customer the option of probing and tracing these routes.",
                        "type": "boolean"
                    },
                    "billingPlan": {
                        "$ref": "#/components/schemas/BillingPlan"
                    },
                    "billingProvider": {
                        "$ref": "#/components/schemas/BillingProvider"
                    },
                    "billingTerm": {
                        "$ref": "#/components/schemas/BillingTerm"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "customerASN": {
                        "description": "The customer side ASN. This can either be a public or private ASN. If this is a public ASN, you must own it to prevent conflicts.",
                        "example": 65222,
                        "format": "int64",
                        "type": "integer"
                    },
                    "customerNetworks": {
                        "description": "Set of customer Networks for this connection.",
                        "items": {
                            "$ref": "#/components/schemas/CustomerNetwork"
                        },
                        "type": "array",
                        "uniqueItems": true
                    },
                    "deletedAt": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "description": {
                        "description": "The user defined description for the connection.",
                        "example": "50Mbps VPN connection with High Availability enabled.",
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    },
                    "errorCode": {
                        "$ref": "#/components/schemas/ErrorCode"
                    },
                    "errorMessage": {
                        "description": "Error message assigned to the connection if it is an error state.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "highAvailability": {
                        "description": "Whether this connection has redundant gateways for failover.",
                        "type": "boolean"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the connection. This can be provided during creation, but if left empty, will be generated.",
                        "example": "conn-T8E8JE6I7anrhXtxrkXPlw",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "name": {
                        "description": "The user specified name for the connection.",
                        "example": "VPN - North Hills, NC - 50Mbps - HA",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "nat": {
                        "$ref": "#/components/schemas/NATConfig"
                    },
                    "network": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "primaryGateway": {
                        "$ref": "#/components/schemas/Gateway"
                    },
                    "secondaryGateway": {
                        "$ref": "#/components/schemas/Gateway"
                    },
                    "speed": {
                        "$ref": "#/components/schemas/ConnectionSpeed"
                    },
                    "state": {
                        "$ref": "#/components/schemas/ConnectionState"
                    },
                    "tags": {
                        "additionalProperties": {
                            "description": "Key-value pairs to associate with the Pureport asset.",
                            "type": "string"
                        },
                        "description": "Key-value pairs to associate with the Pureport asset.",
                        "type": "object"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ConnectionType"
                    }
                },
                "required": [
                    "billingTerm",
                    "highAvailability",
                    "location",
                    "name",
                    "speed",
                    "type"
                ],
                "type": "object"
            },
            "ConnectionProvider": {
                "description": "The provider of connections using this link.",
                "enum": [
                    "AWS",
                    "GOOGLE_CLOUD",
                    "EQUINIX_CLOUD_EXCHANGE",
                    "PUREPORT",
                    "PACKET_FABRIC",
                    "COMCAST",
                    "COX_COMMUNICATIONS",
                    "ELEMENT_CRITICAL",
                    "PACKET",
                    "ZAYO"
                ],
                "type": "string"
            },
            "ConnectionSpeed": {
                "description": "The connection speed in Mbps of this configuration.",
                "enum": [
                    50,
                    100,
                    200,
                    300,
                    400,
                    500,
                    1000,
                    2000,
                    3000,
                    4000,
                    5000,
                    10000
                ],
                "format": "int32",
                "type": "integer"
            },
            "ConnectionState": {
                "description": "The current state of the connection.",
                "enum": [
                    "INITIALIZING",
                    "WAITING_TO_PROVISION",
                    "PENDING_APPROVAL",
                    "APPROVED",
                    "PROVISIONING",
                    "FAILED_TO_PROVISION",
                    "ACTIVE",
                    "DOWN",
                    "UPDATING",
                    "FAILED_TO_UPDATE",
                    "DELETING",
                    "FAILED_TO_DELETE",
                    "DELETED"
                ],
                "type": "string"
            },
            "ConnectionTimeEgressIngress": {
                "properties": {
                    "connection": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "egress": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "ingress": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "time": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ConnectionType": {
                "description": "The types of connection this provider link will be used for.",
                "enum": [
                    "AWS_DIRECT_CONNECT",
                    "AZURE_EXPRESS_ROUTE",
                    "EQUINIX_CLOUD_EXCHANGE",
                    "GOOGLE_CLOUD_INTERCONNECT",
                    "ORACLE_FAST_CONNECT",
                    "SITE_IPSEC_VPN",
                    "PORT",
                    "PACKET_FABRIC",
                    "COMCAST",
                    "COX_COMMUNICATIONS",
                    "ELEMENT_CRITICAL",
                    "PACKET",
                    "ZAYO"
                ],
                "example": "[\"AWS_DIRECT_CONNECT\"]",
                "type": "string"
            },
            "ConnectivityByGateway": {
                "properties": {
                    "average": {
                        "format": "double",
                        "type": "number"
                    },
                    "destinationAddress": {
                        "type": "string"
                    },
                    "gateway": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "lossRate": {
                        "format": "double",
                        "type": "number"
                    },
                    "max": {
                        "format": "double",
                        "type": "number"
                    },
                    "min": {
                        "format": "double",
                        "type": "number"
                    },
                    "standardDeviation": {
                        "format": "double",
                        "type": "number"
                    },
                    "time": {
                        "$ref": "#/components/schemas/InstantRange"
                    }
                },
                "type": "object"
            },
            "CustomerNetwork": {
                "description": "A mapping of a customer side IPAddress with a user friendly name.",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "name": {
                        "description": "The user provided name for the customer network.",
                        "example": "Some network name",
                        "type": "string"
                    }
                },
                "required": [
                    "address"
                ],
                "type": "object"
            },
            "DataPlaneConfig": {
                "enum": [
                    "ALL",
                    "INTERNAL_ONLY",
                    "NONE"
                ],
                "type": "string"
            },
            "DateFilter": {
                "properties": {
                    "gt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "gte": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lte": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DetailedInvoiceItem": {
                "description": "Line item for an account detailed invoice.",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "billableObject": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "billableObjectType": {
                        "description": "The type of the Pureport entity billed for.",
                        "enum": [
                            "PORT",
                            "NETWORK",
                            "CONNECTION"
                        ],
                        "readOnly": true,
                        "type": "string"
                    },
                    "billingPlan": {
                        "$ref": "#/components/schemas/BillingPlan"
                    },
                    "description": {
                        "description": "The description of this line item.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "quantity": {
                        "description": "The amount billed for.",
                        "readOnly": true,
                        "type": "number"
                    },
                    "timeRanges": {
                        "description": "The time ranges billed for this Pureport entity.",
                        "items": {
                            "$ref": "#/components/schemas/ClosedRangeInstant"
                        },
                        "readOnly": true,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "EquinixCloudExchangeConnection": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Connection"
                    },
                    {
                        "properties": {
                            "bfd": {
                                "$ref": "#/components/schemas/BFDConfiguration"
                            },
                            "bgpAlertPercent": {
                                "description": "The percentage of BGP routes of the maximum before we start alerting.",
                                "format": "int32",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            },
                            "bgpMaximumPrefix": {
                                "description": "The maximum number of BGP route prefixes to advertise.",
                                "format": "int32",
                                "maximum": 4000,
                                "minimum": 10,
                                "type": "integer"
                            },
                            "bgpPasswordConfiguration": {
                                "$ref": "#/components/schemas/BGPPasswordConfiguration"
                            },
                            "bgpRestartInterval": {
                                "description": "The interval number of minutes after BGP shutdown that we will wait before attempting to bring up BGP.",
                                "format": "int32",
                                "maximum": 10,
                                "minimum": 1,
                                "type": "integer"
                            },
                            "metroCode": {
                                "description": "The metro code for the location of the Equinix facility.",
                                "example": "AT",
                                "type": "string"
                            },
                            "peering": {
                                "$ref": "#/components/schemas/PeeringConfiguration"
                            },
                            "primaryVlan": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "secondaryVlan": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "serviceUUID": {
                                "description": "The Equinix service UUID for the connection.",
                                "example": "a1390b22-bbe0-4e93-ad37-85beef00984d",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Connection using Equinix Cloud Exchange.",
                "required": [
                    "billingTerm",
                    "customerASN",
                    "highAvailability",
                    "location",
                    "name",
                    "serviceUUID",
                    "speed",
                    "type"
                ],
                "type": "object"
            },
            "ErrorCode": {
                "description": "The HTTP error code if the gateway is in an error state.",
                "enum": [
                    "BAD_REQUEST",
                    "BAD_REQUEST_MISSING_PARAMETER",
                    "RESOURCE_LIMITATION_EXCEEDED",
                    "JSON_PROCESSING_ERROR",
                    "UNAUTHORIZED",
                    "ACCESS_TOKEN_GENERAL",
                    "ACCESS_TOKEN_MISSING",
                    "ACCESS_TOKEN_EXPIRED",
                    "ACCESS_TOKEN_ALGORITHM_MISMATCH",
                    "ACCESS_TOKEN_INVALID_SIGNATURE",
                    "ACCESS_TOKEN_DECODE_ERROR",
                    "API_KEY_NOT_FOUND",
                    "PAYMENT_REQUIRED",
                    "FORBIDDEN",
                    "NOT_FOUND",
                    "METHOD_NOT_ALLOWED",
                    "REQUEST_TIMEOUT",
                    "CONFLICT",
                    "AWS_CONNECTION_HAS_ACTIVE_VIFS",
                    "EXPRESS_ROUTE_SERVICE_KEY_ALREADY_IN_USE",
                    "ORACLE_OCID_ALREADY_IN_USE",
                    "ADMIN_ACCESS_MUST_EXIST",
                    "CONNECTION_UPDATE_STATE_CONFLICT",
                    "CONNECTION_RESPAWN_STATE_CONFLICT",
                    "CONNECTION_DELETE_STATE_CONFLICT",
                    "NETWORK_DELETE_NON_DELETED_CONNECTION_STATE_CONFLICT",
                    "ACCOUNT_DELETE_NON_DELETED_PORT_STATE_CONFLICT",
                    "NETWORK_RESPAWN_STATE_CONFLICT",
                    "NETWORK_DELETE_STATE_CONFLICT",
                    "GATEWAY_RESPAWN_STATE_CONFLICT",
                    "GATEWAY_STOP_STATE_CONFLICT",
                    "GATEWAY_START_STATE_CONFLICT",
                    "PORT_DELETE_NON_DELETED_CONNECTION_STATE_CONFLICT",
                    "PORT_CHILD_ACCOUNT_FLAG_IN_USE",
                    "CONSENT_REQUIRED",
                    "ACCOUNT_ALREADY_CONSENTED",
                    "ACCOUNT_MEMBER_ALREADY_EXISTS",
                    "ACCOUNT_HAS_CHILD_ACCOUNTS",
                    "BILLING_CANNOT_BE_REMOVED",
                    "PORT_BILLING_TERM_INTERVAL_NOT_ELAPSED",
                    "ACCESS_SWITCH_PORT_DELETE_STATE_CONFLICT",
                    "INVALID_CONNECTION_STATE_CHANGE",
                    "CLOUD_REGION_STILL_REFERENCED_BY_CONNECTION_CONFLICT",
                    "REQUEST_ENTITY_TOO_LARGE",
                    "REQUEST_URI_TOO_LONG",
                    "UNSUPPORTED_MEDIA_TYPE",
                    "UNPROCESSABLE_ENTITY",
                    "VALIDATION_ERROR",
                    "INVALID_LINK",
                    "INVALID_SORT",
                    "INVALID_AWS_REGION",
                    "INVALID_EXPRESS_ROUTE_SERVICE_KEY",
                    "INVALID_GOOGLE_PAIRING_KEY",
                    "INVALID_ORACLE_OCID",
                    "INVALID_WHITELIST_PREFIXES",
                    "EXPRESS_ROUTE_SERVICE_KEY_BANDWIDTH_MISMATCH",
                    "ORACLE_OCID_BANDWIDTH_MISMATCH",
                    "MISSING_GCI_CLOUD_ROUTER_IP_ADDRESS",
                    "CONNECTION_CONFIGURATION_NOT_SUPPORTED",
                    "SUPPORTED_CONNECTION_IS_PENDING",
                    "NO_SUPPORTED_PORT_FOR_PORT",
                    "UNSUPPORTED_RESOURCE_LIMIT",
                    "NETWORK_NAME_UNIQUE",
                    "BILLING_CONFIGURATION_CHILD_ACCOUNTS_INVALID_STATE",
                    "BILLING_CONFIGURATION_NOT_PERMITTED",
                    "ACCOUNT_VERIFICATION_REQUIRED",
                    "BILLING_VERIFICATION_FAILED",
                    "MODIFICATION_NOT_ALLOWED",
                    "AWS_CONNECTION_SPEED_IMMUTABLE",
                    "INVALID_VLAN",
                    "INVALID_VLAN_RANGE",
                    "INVALID_VLAN_FOR_CONNECTION",
                    "UNSUPPORTED_TASK_FOR_RESOURCE",
                    "UNSUPPORTED_TASK_NAME",
                    "VLAN_IN_USE",
                    "PORT_CONNECTION_LOCATION_MISMATCH",
                    "SECONDARY_PORT_NOT_IN_SAME_FACILITY_AS_PRIMARY_PORT",
                    "CONNECTION_APPROVAL_NOT_REQUIRED",
                    "INVALID_CUSTOMER_ASN",
                    "INVALID_NAT_OVERLAPPING_NATIVE_CIDRS",
                    "INVALID_PUBLIC_PEERING_OVERLAPPING_BLOCK",
                    "CANT_REMOVE_PUBLIC_PEERING_ALLOCATED_BLOCKS",
                    "NOTIFICATION_STATE_IS_INVALID",
                    "NOTIFICATION_STATE_CHANGE_IS_INVALID",
                    "PEERING_TYPE_CHANGE_NOT_ALLOWED",
                    "PORT_BILLING_TERM_CHANGE_NOT_ALLOWED",
                    "PORT_SPEED_CHANGE_NOT_ALLOWED",
                    "CONNECTION_BILLING_TERM_CHANGE_NOT_ALLOWED",
                    "CONNECTION_SPEED_CHANGE_NOT_ALLOWED",
                    "CONNECTION_SPEED_GREATER_THAN_PORT_SPEED",
                    "MISSING_REQUIRED_QUERY_PARAMETER",
                    "INVALID_REQUIRED_QUERY_PARAMETER",
                    "TASK_TYPE_JUST_COMPLETED",
                    "TASK_TYPE_IN_PROGRESS",
                    "INVALID_PEERING_STATE_FOR_OPERATION",
                    "INVALID_PEERING_TYPE_FOR_OPERATION",
                    "INVALID_PEERING_PNAT_CONFIGURATION",
                    "INVALID_NAT_NO_MORE_AVAILABLE_BLOCKS",
                    "INVALID_NAT_CIDR_ALLOCATION",
                    "INVALID_NAT_OVERLAPPING_NAT_CIDRS",
                    "INVALID_BILLING_CONFIGURATION",
                    "INTERNAL_SERVER_ERROR",
                    "JSON_GENERATION_ERROR",
                    "NETWORK_PROVISIONING_ERROR",
                    "CONNECTION_PROVISIONING_ERROR",
                    "CONNECTION_UPDATE_SPEED_ERROR",
                    "CONNECTION_DELETING_ERROR",
                    "CONNECTION_UPDATING_ERROR",
                    "GATEWAY_PROVISIONING_ERROR",
                    "GATEWAY_UPDATE_SPEED_ERROR",
                    "GATEWAY_UPDATING_ERROR",
                    "GATEWAY_STOP_ERROR",
                    "GATEWAY_START_ERROR",
                    "GATEWAY_DELETING_ERROR",
                    "ECX_GATEWAY_PROVISIONING_ERROR",
                    "ECX_GATEWAY_OPERATION_ERROR",
                    "INVALID_LONG_HAUL_PUREPORT_CONFIGURATION",
                    "INVALID_LONG_HAUL_PACKET_FABRIC_CONFIGURATION",
                    "PORT_PROVISIONING_ERROR",
                    "PORT_UPDATING_ERROR",
                    "PORT_DELETING_ERROR",
                    "NO_PORT_FOUND_FOR_CONNECTION",
                    "AWS_CONNECTION_DELETE_ERROR",
                    "GOOGLE_INTERCONNECT_ATTACHMENT_DELETE_ERROR",
                    "ECX_CONNECTION_DELETE_ERROR",
                    "GOOGLE_OPERATION_TIMEOUT",
                    "PACKET_FABRIC_VIRTUAL_CIRCUT_UPGRADE_ERROR",
                    "MAXIMUM_VRRP_ROUTERS_ALLOCATED",
                    "INVALID_TASK_CONFIGURATION",
                    "CURRENTLY_UNSUPPORTED_TASK_TYPE",
                    "NOT_IMPLEMENTED",
                    "SERVICE_UNAVAILABLE",
                    "EXPRESS_ROUTE_SERVICE_UNAVAILABLE",
                    "ORACLE_FAST_CONNECT_SERVICE_UNAVAILABLE",
                    "INSUFFICIENT_CAPACITY",
                    "NO_MORE_PUBLIC_PEERING_SUBNETS_AVAILABLE"
                ],
                "type": "string"
            },
            "Facility": {
                "description": "A data center facility.",
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/PhysicalAddress"
                    },
                    "altIds": {
                        "additionalProperties": {
                            "description": "A mapping of alternate identifiers associated with the facility.",
                            "type": "string"
                        },
                        "description": "A mapping of alternate identifiers associated with the facility.",
                        "type": "object"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the facility.",
                        "example": "us-equinix-dc2",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the facility.",
                        "example": "Equinix DC2",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "state": {
                        "$ref": "#/components/schemas/FacilityState"
                    },
                    "vendor": {
                        "description": "The vendor of the facility.",
                        "example": "Equinix",
                        "type": "string"
                    }
                },
                "required": [
                    "address",
                    "id",
                    "name",
                    "vendor"
                ],
                "type": "object"
            },
            "FacilityState": {
                "description": "The current state of the facility.",
                "enum": [
                    "ACTIVE",
                    "UNAVAILABLE",
                    "DELETED"
                ],
                "type": "string"
            },
            "Gateway": {
                "description": "A network gateway.",
                "discriminator": {
                    "mapping": {
                        "STANDARD": "#/components/schemas/StandardGateway",
                        "VPN": "#/components/schemas/VPNGateway"
                    },
                    "propertyName": "type"
                },
                "properties": {
                    "availabilityDomain": {
                        "$ref": "#/components/schemas/AvailabilityDomain"
                    },
                    "bgpConfig": {
                        "$ref": "#/components/schemas/BGPConfig"
                    },
                    "connection": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "description": {
                        "description": "The description.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "errorCode": {
                        "$ref": "#/components/schemas/ErrorCode"
                    },
                    "errorMessage": {
                        "description": "The error message if the gateway is in an error state.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the gateway.",
                        "example": "cgw-9iaa6dllma5v1f7nl85af",
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "description": "The name.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "pureportInternalGatewayIP": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "remoteId": {
                        "description": "The ID of any resources attached to the gateway.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "state": {
                        "$ref": "#/components/schemas/GatewayState"
                    },
                    "type": {
                        "$ref": "#/components/schemas/GatewayType"
                    },
                    "version": {
                        "description": "The version of the gateway container.",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GatewayState": {
                "description": "The current state of the gateway.",
                "enum": [
                    "WAITING_TO_PROVISION",
                    "PROVISIONING",
                    "FAILED_TO_PROVISION",
                    "ACTIVE",
                    "DOWN",
                    "UPDATING",
                    "FAILED_TO_UPDATE",
                    "DELETING",
                    "FAILED_TO_DELETE",
                    "DELETED"
                ],
                "type": "string"
            },
            "GatewayType": {
                "description": "The type.",
                "enum": [
                    "STANDARD",
                    "VPN"
                ],
                "type": "string"
            },
            "GenericConnection": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Connection"
                    },
                    {
                        "properties": {
                            "bfd": {
                                "$ref": "#/components/schemas/BFDConfiguration"
                            },
                            "bgpAlertPercent": {
                                "description": "The percentage of BGP routes of the maximum before we start alerting.",
                                "format": "int32",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            },
                            "bgpMaximumPrefix": {
                                "description": "The maximum number of BGP route prefixes to advertise.",
                                "format": "int32",
                                "maximum": 4000,
                                "minimum": 10,
                                "type": "integer"
                            },
                            "bgpPasswordConfiguration": {
                                "$ref": "#/components/schemas/BGPPasswordConfiguration"
                            },
                            "bgpRestartInterval": {
                                "description": "The interval number of minutes after BGP shutdown that we will wait before attempting to bring up BGP.",
                                "format": "int32",
                                "maximum": 10,
                                "minimum": 1,
                                "type": "integer"
                            },
                            "gatewayCidr": {
                                "type": "string"
                            },
                            "peering": {
                                "$ref": "#/components/schemas/PeeringConfiguration"
                            },
                            "primaryGatewayIP": {
                                "type": "string"
                            },
                            "primaryVlan": {
                                "description": "The primary VLAN ID.",
                                "example": 800,
                                "format": "int32",
                                "type": "integer"
                            },
                            "routingType": {
                                "$ref": "#/components/schemas/RoutingType"
                            },
                            "secondaryGatewayIP": {
                                "type": "string"
                            },
                            "secondaryVlan": {
                                "description": "The secondary VLAN ID if this is an HA connection.",
                                "example": 840,
                                "format": "int32",
                                "type": "integer"
                            },
                            "staticRoutes": {
                                "description": "The user configured static routes.",
                                "example": [
                                    {
                                        "network": "192.168.24.0/24",
                                        "nextHop": "10.0.0.4"
                                    },
                                    {
                                        "network": "192.168.25.0/24",
                                        "nextHop": "10.0.0.5"
                                    }
                                ],
                                "items": {
                                    "$ref": "#/components/schemas/StaticRoute"
                                },
                                "type": "array",
                                "uniqueItems": true
                            },
                            "virtualGatewayIP": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Connection using a generic NNI as a provider.",
                "required": [
                    "billingTerm",
                    "highAvailability",
                    "location",
                    "name",
                    "speed",
                    "type"
                ],
                "type": "object"
            },
            "GeoCoordinates": {
                "description": "The latitude and longitude.",
                "properties": {
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    }
                },
                "required": [
                    "latitude",
                    "longitude"
                ],
                "type": "object"
            },
            "GoogleCloudInterconnectConnection": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Connection"
                    },
                    {
                        "properties": {
                            "bfd": {
                                "$ref": "#/components/schemas/BFDConfiguration"
                            },
                            "bgpAlertPercent": {
                                "description": "The percentage of BGP routes of the maximum before we start alerting.",
                                "format": "int32",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            },
                            "bgpMaximumPrefix": {
                                "description": "The maximum number of BGP route prefixes to advertise.",
                                "format": "int32",
                                "maximum": 4000,
                                "minimum": 10,
                                "type": "integer"
                            },
                            "bgpPasswordConfiguration": {
                                "$ref": "#/components/schemas/BGPPasswordConfiguration"
                            },
                            "bgpRestartInterval": {
                                "description": "The interval number of minutes after BGP shutdown that we will wait before attempting to bring up BGP.",
                                "format": "int32",
                                "maximum": 10,
                                "minimum": 1,
                                "type": "integer"
                            },
                            "primaryPairingKey": {
                                "description": "The Pairing Key for the primary gateway of the Google Cloud Interconnect.",
                                "example": "99e0cc93-8b32-4d7e-8b6b-0cd5f1af6e88/us-west1/1",
                                "maxLength": 64,
                                "minLength": 1,
                                "pattern": "^.+/.+/\\d+$",
                                "type": "string"
                            },
                            "primaryVlan": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "secondaryPairingKey": {
                                "description": "The Pairing Key for the secondary gateway of the Google Cloud Interconnect.",
                                "example": "dc2b2c89-b19a-40b5-8af3-a3d5c8b37c5a/us-west2/2",
                                "maxLength": 64,
                                "minLength": 1,
                                "pattern": "^.+/.+/\\d+$",
                                "type": "string"
                            },
                            "secondaryVlan": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Connection using Google Cloud Interconnect.",
                "required": [
                    "billingTerm",
                    "highAvailability",
                    "location",
                    "name",
                    "primaryPairingKey",
                    "speed",
                    "type"
                ],
                "type": "object"
            },
            "IKEState": {
                "enum": [
                    "CREATED",
                    "CONNECTING",
                    "ESTABLISHED",
                    "PASSIVE",
                    "REKEYING",
                    "REKEYED",
                    "DELETING",
                    "DESTROYING",
                    "DOWN"
                ],
                "type": "string"
            },
            "IKEV1Config": {
                "description": "IKE Version 1 configuration",
                "properties": {
                    "esp": {
                        "$ref": "#/components/schemas/IKEV1ESPConfig"
                    },
                    "ike": {
                        "$ref": "#/components/schemas/IKEV1IKEConfig"
                    }
                },
                "required": [
                    "esp",
                    "ike"
                ],
                "type": "object"
            },
            "IKEV1DiffieHellmanGroup": {
                "description": "The Diffie-Hellman Group.",
                "enum": [
                    "MODP_1024",
                    "MODP_1536",
                    "MODP_2048",
                    "MODP_3072",
                    "MODP_4096",
                    "MODP_6144",
                    "MODP_8192",
                    "ECP_192",
                    "ECP_224",
                    "ECP_256",
                    "ECP_384",
                    "ECP_521"
                ],
                "example": "MODP_2048",
                "type": "string"
            },
            "IKEV1ESPConfig": {
                "description": "IKE Version 1 Encapsulating Security Payload configuration.",
                "properties": {
                    "dhGroup": {
                        "$ref": "#/components/schemas/IKEV1DiffieHellmanGroup"
                    },
                    "encryption": {
                        "$ref": "#/components/schemas/IKEV1ESPEncryptionAlgorithm"
                    },
                    "integrity": {
                        "$ref": "#/components/schemas/IKEV1ESPIntegrityAlgorithm"
                    },
                    "lifetime": {
                        "description": "The lifetime of the Security Association (SA).",
                        "example": 3600,
                        "format": "int32",
                        "maximum": 28800,
                        "minimum": 900,
                        "type": "integer"
                    }
                },
                "required": [
                    "dhGroup",
                    "encryption"
                ],
                "type": "object"
            },
            "IKEV1ESPEncryptionAlgorithm": {
                "description": "The encryption algorithm.",
                "enum": [
                    "NULL",
                    "AES_128",
                    "AES_192",
                    "AES_256",
                    "AES_128_CTR",
                    "AES_192_CTR",
                    "AES_256_CTR",
                    "AES_128_GCM_64",
                    "AES_192_GCM_64",
                    "AES_256_GCM_64",
                    "AES_128_GCM_96",
                    "AES_192_GCM_96",
                    "AES_256_GCM_96",
                    "AES_128_GCM_128",
                    "AES_192_GCM_128",
                    "AES_256_GCM_128",
                    "AES_128_GMAC",
                    "AES_192_GMAC",
                    "AES_256_GMAC"
                ],
                "example": "AES_128",
                "type": "string"
            },
            "IKEV1ESPIntegrityAlgorithm": {
                "description": "The integrity algorithm.",
                "enum": [
                    "MD5_HMAC",
                    "SHA1_HMAC",
                    "SHA256_HMAC",
                    "SHA384_HMAC",
                    "SHA512_HMAC",
                    "AES_XCBC"
                ],
                "example": "SHA256_HMAC",
                "type": "string"
            },
            "IKEV1IKEConfig": {
                "description": "IKE Version 1 Internet Key Exchange configuration.",
                "properties": {
                    "dhGroup": {
                        "$ref": "#/components/schemas/IKEV1DiffieHellmanGroup"
                    },
                    "dpdDelay": {
                        "description": "The Dead Peering Detection (DPD) retry interval.",
                        "example": 30,
                        "format": "int32",
                        "maximum": 900,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "dpdTimeout": {
                        "description": "The Dead Peering Detection (DPD) interval.",
                        "example": 150,
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "encryption": {
                        "$ref": "#/components/schemas/IKEV1IKEEncryptionAlgorithm"
                    },
                    "integrity": {
                        "$ref": "#/components/schemas/IKEV1IKEIntegrityAlgorithm"
                    },
                    "lifetime": {
                        "description": "The lifetime of the SA.",
                        "example": 10800,
                        "format": "int32",
                        "maximum": 86400,
                        "minimum": 3600,
                        "type": "integer"
                    }
                },
                "required": [
                    "dhGroup",
                    "encryption",
                    "integrity"
                ],
                "type": "object"
            },
            "IKEV1IKEEncryptionAlgorithm": {
                "description": "The encryption algorithm.",
                "enum": [
                    "AES_128",
                    "AES_192",
                    "AES_256"
                ],
                "example": "AES_128",
                "type": "string"
            },
            "IKEV1IKEIntegrityAlgorithm": {
                "description": "The integrity algorithm.",
                "enum": [
                    "MD5_HMAC",
                    "SHA1_HMAC",
                    "SHA256_HMAC",
                    "SHA384_HMAC",
                    "SHA512_HMAC"
                ],
                "example": "SHA256_HMAC",
                "type": "string"
            },
            "IKEV2Config": {
                "description": "IKE Version 2 configuration",
                "properties": {
                    "esp": {
                        "$ref": "#/components/schemas/IKEV2ESPConfig"
                    },
                    "ike": {
                        "$ref": "#/components/schemas/IKEV2IKEConfig"
                    }
                },
                "required": [
                    "esp",
                    "ike"
                ],
                "type": "object"
            },
            "IKEV2DiffieHellmanGroup": {
                "description": "The Diffie-Hellman Group.",
                "enum": [
                    "MODP_1024",
                    "MODP_1536",
                    "MODP_2048",
                    "MODP_3072",
                    "MODP_4096",
                    "MODP_6144",
                    "MODP_8192",
                    "ECP_192",
                    "ECP_224",
                    "ECP_256",
                    "ECP_384",
                    "ECP_521"
                ],
                "example": "MODP_2048",
                "type": "string"
            },
            "IKEV2ESPConfig": {
                "description": "IKE Version 2 Encapsulating Security Payload configuration.",
                "properties": {
                    "dhGroup": {
                        "$ref": "#/components/schemas/IKEV2DiffieHellmanGroup"
                    },
                    "encryption": {
                        "$ref": "#/components/schemas/IKEV2ESPEncryptionAlgorithm"
                    },
                    "integrity": {
                        "$ref": "#/components/schemas/IKEV2ESPIntegrityAlgorithm"
                    },
                    "lifetime": {
                        "description": "The lifetime of the Security Association (SA).",
                        "example": 3600,
                        "format": "int32",
                        "maximum": 28800,
                        "minimum": 900,
                        "type": "integer"
                    }
                },
                "required": [
                    "dhGroup",
                    "encryption"
                ],
                "type": "object"
            },
            "IKEV2ESPEncryptionAlgorithm": {
                "description": "The encryption algorithm.",
                "enum": [
                    "NULL",
                    "AES_128",
                    "AES_192",
                    "AES_256",
                    "AES_128_CTR",
                    "AES_192_CTR",
                    "AES_256_CTR",
                    "AES_128_GCM_64",
                    "AES_192_GCM_64",
                    "AES_256_GCM_64",
                    "AES_128_GCM_96",
                    "AES_192_GCM_96",
                    "AES_256_GCM_96",
                    "AES_128_GCM_128",
                    "AES_192_GCM_128",
                    "AES_256_GCM_128",
                    "AES_128_GMAC",
                    "AES_192_GMAC",
                    "AES_256_GMAC"
                ],
                "example": "AES_128",
                "type": "string"
            },
            "IKEV2ESPIntegrityAlgorithm": {
                "description": "The integrity algorithm.",
                "enum": [
                    "MD5_HMAC",
                    "SHA1_HMAC",
                    "SHA256_HMAC",
                    "SHA384_HMAC",
                    "SHA512_HMAC",
                    "AES_XCBC"
                ],
                "example": "SHA256_HMAC",
                "type": "string"
            },
            "IKEV2IKEConfig": {
                "description": "IKE Version 2 Internet Key Exchange configuration.",
                "properties": {
                    "dhGroup": {
                        "$ref": "#/components/schemas/IKEV2DiffieHellmanGroup"
                    },
                    "dpdDelay": {
                        "description": "The Dead Peering Detection (DPD) retry interval.",
                        "example": 30,
                        "format": "int32",
                        "maximum": 900,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "dpdTimeout": {
                        "description": "The Dead Peering Detection (DPD) interval.",
                        "example": 150,
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "encryption": {
                        "$ref": "#/components/schemas/IKEV2IKEEncryptionAlgorithm"
                    },
                    "integrity": {
                        "$ref": "#/components/schemas/IKEV2IKEIntegrityAlgorithm"
                    },
                    "lifetime": {
                        "description": "The lifetime of the SA.",
                        "example": 10800,
                        "format": "int32",
                        "maximum": 86400,
                        "minimum": 3600,
                        "type": "integer"
                    },
                    "prf": {
                        "$ref": "#/components/schemas/IKEV2PseudoRandomFunction"
                    }
                },
                "required": [
                    "dhGroup",
                    "encryption"
                ],
                "type": "object"
            },
            "IKEV2IKEEncryptionAlgorithm": {
                "description": "The encryption algorithm.",
                "enum": [
                    "NULL",
                    "AES_128",
                    "AES_192",
                    "AES_256",
                    "AES_128_CTR",
                    "AES_192_CTR",
                    "AES_256_CTR",
                    "AES_128_GCM_64",
                    "AES_192_GCM_64",
                    "AES_256_GCM_64",
                    "AES_128_GCM_96",
                    "AES_192_GCM_96",
                    "AES_256_GCM_96",
                    "AES_128_GCM_128",
                    "AES_192_GCM_128",
                    "AES_256_GCM_128"
                ],
                "example": "AES_128",
                "type": "string"
            },
            "IKEV2IKEIntegrityAlgorithm": {
                "description": "The integrity algorithm.",
                "enum": [
                    "MD5_HMAC",
                    "SHA1_HMAC",
                    "SHA256_HMAC",
                    "SHA384_HMAC",
                    "SHA512_HMAC",
                    "AES_XCBC"
                ],
                "example": "SHA256_HMAC",
                "type": "string"
            },
            "IKEV2PseudoRandomFunction": {
                "enum": [
                    "MD5",
                    "SHA_1",
                    "AES_XCBC",
                    "SHA_256",
                    "SHA_384",
                    "SHA_512"
                ],
                "type": "string"
            },
            "IKEVersion": {
                "description": "The IKE version.",
                "enum": [
                    "V1",
                    "V2"
                ],
                "type": "string"
            },
            "IPRoute": {
                "description": "IP Route information",
                "properties": {
                    "directlyConnected": {
                        "description": "Whether this route is directly connected.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "distance": {
                        "description": "The route distance.",
                        "example": 200,
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "fib": {
                        "description": "Whether this route is a part of the FIB (Forwarding) table.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "interfaceName": {
                        "description": "The interface name.",
                        "example": "eth0",
                        "readOnly": true,
                        "type": "string"
                    },
                    "metric": {
                        "description": "The metric for the route.",
                        "example": 100,
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "nextHop": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "nextHopConnection": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "nextHopGateway": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "prefix": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "protocol": {
                        "description": "The protocol for the route.",
                        "example": "bgp",
                        "readOnly": true,
                        "type": "string"
                    },
                    "selected": {
                        "description": "Whether this route is marked as selected.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "uptime": {
                        "description": "The uptime for this route in hours:minutes:seconds.",
                        "example": "22:30:20",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "IPSecAuthenticationType": {
                "description": "The authentication type.",
                "enum": [
                    "PSK"
                ],
                "type": "string"
            },
            "InstantRange": {
                "properties": {
                    "empty": {
                        "type": "boolean"
                    },
                    "endInclusive": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "start": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Link": {
                "description": "Information for the specified Pureport asset.",
                "example": {
                    "href": "/networks/network-IQ_fTVDErgXvaf6KeWzIVg",
                    "id": "network-IQ_fTVDErgXvaf6KeWzIVg",
                    "title": "Raleigh Network"
                },
                "properties": {
                    "href": {
                        "description": "The URI for the Pureport asset.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the Pureport asset.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "title": {
                        "description": "The title for the Pureport asset.",
                        "type": "string"
                    }
                },
                "required": [
                    "href"
                ],
                "type": "object"
            },
            "Location": {
                "description": "A geographic location.",
                "properties": {
                    "geoCoordinates": {
                        "$ref": "#/components/schemas/GeoCoordinates"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the location.",
                        "example": "us-wdc",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "locationLinks": {
                        "description": "Other locations linked across the Pureport backbone to this location.",
                        "items": {
                            "$ref": "#/components/schemas/LocationLinkConnection"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "The name of the location.",
                        "example": "Washington, DC",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "geoCoordinates",
                    "id",
                    "name"
                ],
                "type": "object"
            },
            "LocationLinkConnection": {
                "description": "Link between Pureport Locations across the Pureport backbone.",
                "properties": {
                    "location": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "speed": {
                        "$ref": "#/components/schemas/ConnectionSpeed"
                    }
                },
                "required": [
                    "location",
                    "speed"
                ],
                "type": "object"
            },
            "LoginRequest": {
                "description": "Authenticate to the Pureport API",
                "properties": {
                    "key": {
                        "description": "The key to authenticate with.",
                        "example": "PiLFAWoQPHI9n",
                        "type": "string"
                    },
                    "secret": {
                        "description": "The secret for the key to authenticate with.",
                        "example": "zI7dmQsEspXPEKiS6",
                        "type": "string"
                    }
                },
                "required": [
                    "key",
                    "secret"
                ],
                "type": "object"
            },
            "LoginResponse": {
                "description": "Response for an authentication request.",
                "properties": {
                    "access_token": {
                        "description": "A token to use for requests to the Pureport API.",
                        "example": "eyJraWQiOiJHcjI1SFdqa1RyMEJpYjYxNDEwSDhkV1NuWDE2Q2VHZjdwaExyWkZ3SitVPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI2ZjZiYzA0Zi0wMzJiLTQ2YmItYTc3YS0zYjY4MjI2Y2UyODEiLCJldmVudF9pZCI6IjBkMjMyYWI0LTA0NmQtNDg0OC05ZTNkLWU5MjNiYTllY2I3ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE1ODkyMDc4NjYsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC51cy1lYXN0LTEuYW1hem9uYXdzLmNvbVwvdXMtZWFzdC0xX085YVE0VFZFRCIsImV4cCI6MTU4OTIxMTQ2NiwiaWF0IjoxNTg5MjA3ODY2LCJqdGkiOiIyMTM2ZmNhMS0xMGEwLTRlYWItYTI4OC1mMmYzNGJkMGUxZjkiLCJjbGllbnRfaWQiOiI0Yjk4NzRhZmpndmEyb243bHFzczF0ODc2OSIsInVzZXJuYW1lIjoiUGlMRkFXb1FQSEk5biJ9.m3TEhWNTNqpW7aNIs2R48SIR7WDlfDEwRSPMPfVojH9euRptVHBRoRiSjdUI00QTQEsN_8ZxGOXmsyx4eCCNlI21esJ-Qer7Je1jzMAuKLLdpH3sHKvsejoT5YexkUUHuItWtKFsU3JsbsidN0qUOVd9C9eolJ7_Kr0OK8PizzJSw5sbDFOFEktSlRN0tkC_SwWNB__AFGY2UwF13mj3l8Kwdt9FCwe-ibFdqadB-EwfYEahGL_J8UpOe69F0pAFdeHQzvjb-zoOC2e_vfHC7GY-8EQDE758XyG7yJfyIyu71m7D4erq63icSZK8YL4MXWp2DhIRBPChm6WZUGpcMw",
                        "externalDocs": {
                            "url": "https://tools.ietf.org/html/rfc6749#section-1.4"
                        },
                        "type": "string"
                    },
                    "expires_in": {
                        "description": "Length of time in seconds before token expiration.",
                        "example": 3600,
                        "format": "int32",
                        "type": "integer"
                    },
                    "refresh_token": {
                        "description": "A token to use for refresh the authentication to the Pureport API.",
                        "example": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.HSfD-giY_4RUk8h5KCP8e_9jCbU5qsbzCY8t01ALFSYFWhaWGfHJkkgHhGX9YHS-PB6lFAPsPNAv9ga8hqUToBEtnL5o-xrHhtyJmlguic7YQ_6Et8wrpb4StujjIJVJfprjjTjW7Gq6FKy6K-y36rhdzYql-9beIsrJTqI8WPA1YZvOFnJrr0xMHr9odb8TzCvrKGc1VHD_tdTauVTUp9jl-4VFTH3AWCrRO_FeuUAoS3ZSDT0YNtLt3JW3j0F9fl4LSVHotU_1Z1rl_uQ6W_ORPBK8AtyXMb2cnxZzuyIorItzUk-aFjxTytScywyz4vZagIuNbDrrv6LwsJwxzw.hkLinb-EnpyDnTsH.GWLR_sh8t0JrZRWplzAMhYxs84z1O3cECRH9ysGCmEZWyIm4stQykjtLQkP6GK3Efm4gjpRLkSbhgk1S2N0vJ_rdtc9ZCRyFEQJ5qakQ71mbI76GkpqW7Mp_U8U8bRO7Z56Obwt5IHmIIhvCtJu2KYPlXH_k0LMOPrWtIMGmPR3sNnpDGocu8oU0zuYksc7xvKIu98T4ofU3pF5qgsfDif67AF__YJMxTB63zYCNG_AZLz11otmk3oUP1KidhO1HNuQmXthavuBm0_LYZliX9Lfi9As8CwPHdGhcqnr0bl3uYP6c1tw9W2nUi_hhqGKi10k65cHku5SzTugs7bt-ZkRB4Kv-c3CTl0UzhLZoJ43BIRtqJlflQOjTGrcQVUmLL7C6U17MY26bolUGebZjetmmQIwzuPFB5a4clYUS5PdIUpf3V4Olp_-G5uqvEHuSqIah1d-h979oSaq10hDrq_DiRu2jLuD-xoD1yngvkeB1N9q5blF1T0KimP3ScNRg5sb0q2Hp3qHIixr8R2l0H1KWOtkBXmvcpwuirxex6YJBQ0Q30UzENtUvzoS14ZMDnHNs7VsllwQR2wBZdpLg4rdR4mQpHIlC5zBSuiyjAu16VhuqJGo0VRkKxttbrSOXoUVvWG2wZreUuX_f6eoABLH9Z_21xoWera7eX-j7iFSMBDeUxrqq3gYyCGTJvR1-IUib5v7PB8184YxCLlt18xPRgq7CFIedxSs5b-aqq1MEUhsER9pJQBixXUqeT696XtUaXR6eHk0P74A49T_u7E0pmG6_S7_OE7hpz8CcVcL-nelpJksa56MYDxvyc-51UBjMdEsEbtgumWaADfY6MA3hUUchQAGCVBRW4P5ihMZo64xXJIvvilVxEyMSXPDtV01I9LK7ih9M7e0FpmZA8DDmea6wQpkUWPwe8jDhU-hakXRviSObZMP4gMiIHe8w-PQF0CmAtYawQxexV_WhaWG7_u75qJrnpMMJ1O0T34vumdy17X35C3FGVLjebRtBlLv-JZuHV3Bxnopqu0z_dCEcth6Rhm0_Ys66q5Ykyn8h4geEIHWqSZWrDwfCPazRC_Fw_aBlh18WpHYr_5ibuL9ehhyZbDNjBtFft1fINAgoB_M7gQlIlRty8vVV5b3Y0a2OOKdPPvVvYYXijM5M9-lkHfL5g8sTVJ7vwbm-BTE7JXUUVVsOnKXI-jGl1LD07EXPlqBBjzs3E_Na-b2RcxOb1gDy-nJnqBbnQlc_JENevlo10xEsgqxu_8LNeLOD60RtmgnVlravero_4Q.6QAepLSiPzCdOmqTrBq1Sw",
                        "externalDocs": {
                            "url": "https://tools.ietf.org/html/rfc6749#section-1.5"
                        },
                        "type": "string"
                    },
                    "token_type": {
                        "description": "The type of accessToken returned.",
                        "example": "bearer",
                        "type": "string"
                    }
                },
                "required": [
                    "access_token",
                    "expires_in",
                    "token_type"
                ],
                "type": "object"
            },
            "LoginWithRefreshTokenRequest": {
                "description": "Authenticate using a refresh token.",
                "properties": {
                    "refreshToken": {
                        "description": "The refresh token to authenticate with.",
                        "example": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.HSfD-giY_4RUk8h5KCP8e_9jCbU5qsbzCY8t01ALFSYFWhaWGfHJkkgHhGX9YHS-PB6lFAPsPNAv9ga8hqUToBEtnL5o-xrHhtyJmlguic7YQ_6Et8wrpb4StujjIJVJfprjjTjW7Gq6FKy6K-y36rhdzYql-9beIsrJTqI8WPA1YZvOFnJrr0xMHr9odb8TzCvrKGc1VHD_tdTauVTUp9jl-4VFTH3AWCrRO_FeuUAoS3ZSDT0YNtLt3JW3j0F9fl4LSVHotU_1Z1rl_uQ6W_ORPBK8AtyXMb2cnxZzuyIorItzUk-aFjxTytScywyz4vZagIuNbDrrv6LwsJwxzw.hkLinb-EnpyDnTsH.GWLR_sh8t0JrZRWplzAMhYxs84z1O3cECRH9ysGCmEZWyIm4stQykjtLQkP6GK3Efm4gjpRLkSbhgk1S2N0vJ_rdtc9ZCRyFEQJ5qakQ71mbI76GkpqW7Mp_U8U8bRO7Z56Obwt5IHmIIhvCtJu2KYPlXH_k0LMOPrWtIMGmPR3sNnpDGocu8oU0zuYksc7xvKIu98T4ofU3pF5qgsfDif67AF__YJMxTB63zYCNG_AZLz11otmk3oUP1KidhO1HNuQmXthavuBm0_LYZliX9Lfi9As8CwPHdGhcqnr0bl3uYP6c1tw9W2nUi_hhqGKi10k65cHku5SzTugs7bt-ZkRB4Kv-c3CTl0UzhLZoJ43BIRtqJlflQOjTGrcQVUmLL7C6U17MY26bolUGebZjetmmQIwzuPFB5a4clYUS5PdIUpf3V4Olp_-G5uqvEHuSqIah1d-h979oSaq10hDrq_DiRu2jLuD-xoD1yngvkeB1N9q5blF1T0KimP3ScNRg5sb0q2Hp3qHIixr8R2l0H1KWOtkBXmvcpwuirxex6YJBQ0Q30UzENtUvzoS14ZMDnHNs7VsllwQR2wBZdpLg4rdR4mQpHIlC5zBSuiyjAu16VhuqJGo0VRkKxttbrSOXoUVvWG2wZreUuX_f6eoABLH9Z_21xoWera7eX-j7iFSMBDeUxrqq3gYyCGTJvR1-IUib5v7PB8184YxCLlt18xPRgq7CFIedxSs5b-aqq1MEUhsER9pJQBixXUqeT696XtUaXR6eHk0P74A49T_u7E0pmG6_S7_OE7hpz8CcVcL-nelpJksa56MYDxvyc-51UBjMdEsEbtgumWaADfY6MA3hUUchQAGCVBRW4P5ihMZo64xXJIvvilVxEyMSXPDtV01I9LK7ih9M7e0FpmZA8DDmea6wQpkUWPwe8jDhU-hakXRviSObZMP4gMiIHe8w-PQF0CmAtYawQxexV_WhaWG7_u75qJrnpMMJ1O0T34vumdy17X35C3FGVLjebRtBlLv-JZuHV3Bxnopqu0z_dCEcth6Rhm0_Ys66q5Ykyn8h4geEIHWqSZWrDwfCPazRC_Fw_aBlh18WpHYr_5ibuL9ehhyZbDNjBtFft1fINAgoB_M7gQlIlRty8vVV5b3Y0a2OOKdPPvVvYYXijM5M9-lkHfL5g8sTVJ7vwbm-BTE7JXUUVVsOnKXI-jGl1LD07EXPlqBBjzs3E_Na-b2RcxOb1gDy-nJnqBbnQlc_JENevlo10xEsgqxu_8LNeLOD60RtmgnVlravero_4Q.6QAepLSiPzCdOmqTrBq1Sw",
                        "externalDocs": {
                            "url": "https://tools.ietf.org/html/rfc6749#section-1.5"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "refreshToken"
                ],
                "type": "object"
            },
            "NATConfig": {
                "description": "Network Address Translation configuration.",
                "properties": {
                    "blocks": {
                        "description": "The reserved CIDR blocks for allocation of customer NAT mappings.",
                        "example": [
                            "100.64.0.0/16"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "mappings": {
                        "description": "The customer NAT mappings.",
                        "items": {
                            "$ref": "#/components/schemas/NATMapping"
                        },
                        "maxItems": 1000,
                        "minItems": 0,
                        "type": "array"
                    },
                    "pnatCidr": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "NATMapping": {
                "description": "Network Address Translation Mapping between a customer subnet and a subnet used for SNAT/DNAT.",
                "properties": {
                    "block": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "natCidr": {
                        "type": "string"
                    },
                    "nativeCidr": {
                        "type": "string"
                    }
                },
                "required": [
                    "nativeCidr"
                ],
                "type": "object"
            },
            "Network": {
                "description": "Pureport mesh network",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "description": {
                        "description": "The description.",
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the network.",
                        "example": "network-IQ_fTVDErgXvaf6KeWzIVg",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "description": "The name.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "osPrimaryControllerId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "osPrivateNetworkId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "osProjectId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "osSecondaryControllerId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "primaryControllerExternalId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "secondaryControllerExternalId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "state": {
                        "$ref": "#/components/schemas/NetworkState"
                    },
                    "tags": {
                        "additionalProperties": {
                            "description": "Key-value pairs to associate with the Pureport asset.",
                            "type": "string"
                        },
                        "description": "Key-value pairs to associate with the Pureport asset.",
                        "type": "object"
                    },
                    "testNetwork": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "NetworkConnectionEgressIngress": {
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "connection": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "egress": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "ingress": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "network": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "type": "object"
            },
            "NetworkState": {
                "description": "The current state.",
                "enum": [
                    "PENDING",
                    "PROVISIONING",
                    "PENDING_CONTROLLERS",
                    "DELETING_CONTROLLERS",
                    "PROVISIONING_CONTROLLERS",
                    "ACTIVE",
                    "DELETING",
                    "DELETED",
                    "ERROR"
                ],
                "type": "string"
            },
            "NetworkTimeUsage": {
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "network": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "time": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "usage": {
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Notification": {
                "description": "An informational message for Pureport users.",
                "properties": {
                    "availabilityDomain": {
                        "$ref": "#/components/schemas/AvailabilityDomain"
                    },
                    "connectionTypes": {
                        "description": "A list of connection types to be affected.",
                        "items": {
                            "$ref": "#/components/schemas/ConnectionType"
                        },
                        "type": "array",
                        "uniqueItems": true
                    },
                    "createdAt": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "description": {
                        "description": "The description.",
                        "example": "Updates to management plane components of the Pureport SDN Platform.",
                        "type": "string"
                    },
                    "end": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the notification.",
                        "example": "nx-is2ItiWXL3nAddF8wCEXhQ",
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string"
                    },
                    "impactedServices": {
                        "description": "The list of Pureport services to be affected.",
                        "items": {
                            "$ref": "#/components/schemas/NotificationImpactedService"
                        },
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                    },
                    "locations": {
                        "description": "A list of asset links of Pureport locations to be affected.",
                        "example": {
                            "href": "/locations/us-chi",
                            "id": "us-chi",
                            "title": "Chicago, IL"
                        },
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "type": "array",
                        "uniqueItems": true
                    },
                    "start": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "state": {
                        "$ref": "#/components/schemas/NotificationState"
                    },
                    "type": {
                        "$ref": "#/components/schemas/NotificationType"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "end",
                    "impactedServices",
                    "start",
                    "type"
                ],
                "type": "object"
            },
            "NotificationImpactedService": {
                "description": "The list of Pureport services to be affected.",
                "enum": [
                    "PUREPORT_CONSOLE",
                    "PUREPORT_API",
                    "PUREPORT_CONNECTIONS",
                    "THIRD_PARTY_API",
                    "THIRD_PARTY_CONNECTIONS"
                ],
                "type": "string"
            },
            "NotificationState": {
                "description": "The current state.",
                "enum": [
                    "DRAFT",
                    "PUBLISHED",
                    "CANCELED",
                    "DELETED"
                ],
                "type": "string"
            },
            "NotificationType": {
                "description": "The type.",
                "enum": [
                    "INCIDENT",
                    "MAINTENANCE_WINDOW"
                ],
                "type": "string"
            },
            "Option": {
                "description": "IPsec security association configurations",
                "properties": {
                    "aead": {
                        "description": "Whether AEAD (Authenticated Encryption with Associated Data) is supported.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "default": {
                        "description": "Whether the option is a default configuration.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "description": {
                        "description": "The description.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "unsafe": {
                        "description": "Whether the option is considered unsafe.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "value": {
                        "description": "The name.",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OracleFastConnectConnection": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Connection"
                    },
                    {
                        "properties": {
                            "bfd": {
                                "$ref": "#/components/schemas/BFDConfiguration"
                            },
                            "bgpAlertPercent": {
                                "description": "The percentage of BGP routes of the maximum before we start alerting.",
                                "format": "int32",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            },
                            "bgpMaximumPrefix": {
                                "description": "The maximum number of BGP route prefixes to advertise.",
                                "format": "int32",
                                "maximum": 4000,
                                "minimum": 10,
                                "type": "integer"
                            },
                            "bgpPasswordConfiguration": {
                                "$ref": "#/components/schemas/BGPPasswordConfiguration"
                            },
                            "bgpRestartInterval": {
                                "description": "The interval number of minutes after BGP shutdown that we will wait before attempting to bring up BGP.",
                                "format": "int32",
                                "maximum": 10,
                                "minimum": 1,
                                "type": "integer"
                            },
                            "cloudRegion": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "peering": {
                                "$ref": "#/components/schemas/PeeringConfiguration"
                            },
                            "primaryOcid": {
                                "description": "The primary Oracle Cloud ID (OCID) for the Oracle Fast Connect.",
                                "example": "ocid1.instance.oc1.phx.abuw4ljrlsfiqw6vzzxb4300000000000000000000000000000000000001",
                                "externalDocs": {
                                    "description": "Oracle Cloud Documentation",
                                    "url": "https://docs.cloud.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm"
                                },
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "primaryVlan": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "secondaryOcid": {
                                "description": "The secondary Oracle Cloud ID (OCID) for the Oracle Fast Connect.",
                                "example": "ocid1.instance.oc1.phx.abuw4ljrlsfiqw6vzzxb4300000000000000000000000000000000000002",
                                "externalDocs": {
                                    "description": "Oracle Cloud Documentation",
                                    "url": "https://docs.cloud.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm"
                                },
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "secondaryVlan": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Connection using Oracle Fast Connect.",
                "required": [
                    "billingTerm",
                    "cloudRegion",
                    "highAvailability",
                    "location",
                    "name",
                    "peering",
                    "primaryOcid",
                    "speed",
                    "type"
                ],
                "type": "object"
            },
            "PSKAuthConfig": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/VPNAuthConfig"
                    },
                    {
                        "properties": {
                            "key": {
                                "description": "The Pre-Shared Key.",
                                "example": "zflgqfgjt1Tu53bep6klg2fdF5Y6KLtZ5",
                                "readOnly": true,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "PSK authentication configuration",
                "type": "object"
            },
            "PacketFabricConnection": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Connection"
                    },
                    {
                        "properties": {
                            "bfd": {
                                "$ref": "#/components/schemas/BFDConfiguration"
                            },
                            "bgpAlertPercent": {
                                "description": "The percentage of BGP routes of the maximum before we start alerting.",
                                "format": "int32",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            },
                            "bgpMaximumPrefix": {
                                "description": "The maximum number of BGP route prefixes to advertise.",
                                "format": "int32",
                                "maximum": 4000,
                                "minimum": 10,
                                "type": "integer"
                            },
                            "bgpPasswordConfiguration": {
                                "$ref": "#/components/schemas/BGPPasswordConfiguration"
                            },
                            "bgpRestartInterval": {
                                "description": "The interval number of minutes after BGP shutdown that we will wait before attempting to bring up BGP.",
                                "format": "int32",
                                "maximum": 10,
                                "minimum": 1,
                                "type": "integer"
                            },
                            "cloudRegion": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "customer": {
                                "$ref": "#/components/schemas/PacketFabricCustomer"
                            },
                            "customerPrimaryId": {
                                "description": "An ID representing the primary connection with the 3rd party provider selected in the \u201ccustomer\u201d field.",
                                "example": "ocid1.virtualcircuit.oc1.iad.aaaaaaaak346j4rsngu5cuh4z30000000000000000000000000000000001",
                                "type": "string"
                            },
                            "customerSecondaryId": {
                                "description": "An ID representing the secondary connection with the 3rd party provider selected in the \u201ccustomer\u201d field.",
                                "example": "ocid1.virtualcircuit.oc1.iad.aaaaaaaak346j4rsngu5cuh4z30000000000000000000000000000000002",
                                "type": "string"
                            },
                            "peering": {
                                "$ref": "#/components/schemas/PeeringConfiguration"
                            },
                            "primaryVlan": {
                                "description": "The primary VLAN ID.",
                                "example": 800,
                                "format": "int32",
                                "type": "integer"
                            },
                            "secondaryVlan": {
                                "description": "The secondary VLAN ID if this is an HA connection.",
                                "example": 840,
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Connection using Packet Fabric as an access point provider.",
                "required": [
                    "billingTerm",
                    "cloudRegion",
                    "customer",
                    "customerPrimaryId",
                    "highAvailability",
                    "location",
                    "name",
                    "peering",
                    "speed",
                    "type"
                ],
                "type": "object"
            },
            "PacketFabricCustomer": {
                "description": "The Packet Fabric customer information.",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "PageAuditEntry": {
                "properties": {
                    "content": {
                        "items": {
                            "$ref": "#/components/schemas/AuditEntry"
                        },
                        "type": "array"
                    },
                    "pageNumber": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "pageSize": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/Sort"
                    },
                    "totalElements": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PageTask": {
                "properties": {
                    "content": {
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        },
                        "type": "array"
                    },
                    "pageNumber": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "pageSize": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/Sort"
                    },
                    "totalElements": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PeeringConfiguration": {
                "description": "Peering configuration.",
                "properties": {
                    "primaryPureportBgpIP": {
                        "type": "string"
                    },
                    "primaryRemoteBgpIP": {
                        "type": "string"
                    },
                    "secondaryPureportBgpIP": {
                        "type": "string"
                    },
                    "secondaryRemoteBgpIP": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/PeeringType"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "PeeringType": {
                "description": "The peering type of this configuration.",
                "enum": [
                    "PUBLIC",
                    "PRIVATE",
                    "TRANSIT"
                ],
                "type": "string"
            },
            "PhysicalAddress": {
                "description": "The street address and geolocation",
                "properties": {
                    "city": {
                        "description": "The city name.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The country name.",
                        "type": "string"
                    },
                    "geoCoordinates": {
                        "$ref": "#/components/schemas/GeoCoordinates"
                    },
                    "placeId": {
                        "description": "A valid Google Place ID",
                        "type": "string"
                    },
                    "postalCode": {
                        "description": "The postal code.",
                        "type": "string"
                    },
                    "state": {
                        "description": "The state or locality name.",
                        "type": "string"
                    },
                    "street": {
                        "description": "The street name.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Pod": {
                "description": "A Pureport installation of networking infrastructure.",
                "example": {
                    "facility": {
                        "href": "/facilities/us-equinix-dc2",
                        "id": "us-equinix-dc2",
                        "title": "Equinix DC2"
                    },
                    "href": "/pods/us-wdc-2a",
                    "id": "us-wdc-2a",
                    "location": {
                        "href": "/locations/us-wdc",
                        "id": "us-wdc",
                        "title": "Washington, DC"
                    },
                    "status": "AVAILABLE"
                },
                "properties": {
                    "facility": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the pod.",
                        "example": "us-wdc-2a",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "status": {
                        "$ref": "#/components/schemas/PodStatus"
                    }
                },
                "required": [
                    "id",
                    "location",
                    "status"
                ],
                "type": "object"
            },
            "PodStatus": {
                "description": "The current status of the pod.",
                "enum": [
                    "AVAILABLE",
                    "UNAVAILABLE"
                ],
                "type": "string"
            },
            "Port": {
                "description": "Networking port",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "availabilityDomain": {
                        "$ref": "#/components/schemas/AvailabilityDomain"
                    },
                    "availableToChildAccounts": {
                        "description": "Whether this port is available for use in child accounts.",
                        "type": "boolean"
                    },
                    "billingPlan": {
                        "$ref": "#/components/schemas/BillingPlan"
                    },
                    "billingTerm": {
                        "$ref": "#/components/schemas/BillingTerm"
                    },
                    "description": {
                        "description": "The description.",
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    },
                    "deviceId": {
                        "description": "The id of the device hosting this port.",
                        "example": "us-sea-3a-ras1",
                        "readOnly": true,
                        "type": "string"
                    },
                    "facility": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the port.",
                        "example": "port-ULMofP0XZUsKlrgaomM79Q",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "interfaceId": {
                        "description": "The id of the interface the port is using.",
                        "example": "us-sea-3a-ras1-swp4",
                        "readOnly": true,
                        "type": "string"
                    },
                    "loaCustomerName": {
                        "description": "The customer name to appear on a Letter of Authorization.",
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string"
                    },
                    "mediaType": {
                        "description": "The media type for this port.",
                        "example": "SMF",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "patchPanelId": {
                        "description": "The id of the patch panel the port is using.",
                        "example": "SE2-12-013080-0109|PP:0109:9943226",
                        "readOnly": true,
                        "type": "string"
                    },
                    "patchPanelPortNumbers": {
                        "description": "The ports on the patch panel the port is using.",
                        "example": [
                            7,
                            8
                        ],
                        "items": {
                            "description": "The ports on the patch panel the port is using.",
                            "format": "int32",
                            "type": "integer"
                        },
                        "readOnly": true,
                        "type": "array",
                        "uniqueItems": true
                    },
                    "provider": {
                        "$ref": "#/components/schemas/PortProvider"
                    },
                    "speed": {
                        "$ref": "#/components/schemas/PortSpeed"
                    },
                    "state": {
                        "$ref": "#/components/schemas/PortState"
                    },
                    "tags": {
                        "additionalProperties": {
                            "description": "Key-value pairs to associate with the Pureport asset.",
                            "type": "string"
                        },
                        "description": "Key-value pairs to associate with the Pureport asset.",
                        "type": "object"
                    }
                },
                "required": [
                    "account",
                    "availabilityDomain",
                    "billingTerm",
                    "facility",
                    "mediaType",
                    "name",
                    "provider",
                    "speed"
                ],
                "type": "object"
            },
            "PortConnection": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Connection"
                    },
                    {
                        "properties": {
                            "bfd": {
                                "$ref": "#/components/schemas/BFDConfiguration"
                            },
                            "bgpAlertPercent": {
                                "description": "The percentage of BGP routes of the maximum before we start alerting.",
                                "format": "int32",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            },
                            "bgpMaximumPrefix": {
                                "description": "The maximum number of BGP route prefixes to advertise.",
                                "format": "int32",
                                "maximum": 4000,
                                "minimum": 10,
                                "type": "integer"
                            },
                            "bgpPasswordConfiguration": {
                                "$ref": "#/components/schemas/BGPPasswordConfiguration"
                            },
                            "bgpRestartInterval": {
                                "description": "The interval number of minutes after BGP shutdown that we will wait before attempting to bring up BGP.",
                                "format": "int32",
                                "maximum": 10,
                                "minimum": 1,
                                "type": "integer"
                            },
                            "billingLongHaul": {
                                "$ref": "#/components/schemas/BillingLongHaul"
                            },
                            "gatewayCidr": {
                                "type": "string"
                            },
                            "primaryCustomerVlan": {
                                "description": "The VLAN ID of the primary gateway.",
                                "example": 800,
                                "format": "int32",
                                "maximum": 4096,
                                "minimum": 0,
                                "type": "integer"
                            },
                            "primaryGatewayIP": {
                                "type": "string"
                            },
                            "primaryPort": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "primaryVlan": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "routingType": {
                                "$ref": "#/components/schemas/RoutingType"
                            },
                            "secondaryCustomerVlan": {
                                "description": "The VLAN ID of the secondary gateway if this is an HA connection.",
                                "example": 840,
                                "format": "int32",
                                "maximum": 4096,
                                "minimum": 0,
                                "type": "integer"
                            },
                            "secondaryGatewayIP": {
                                "type": "string"
                            },
                            "secondaryPort": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "secondaryVlan": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "staticRoutes": {
                                "description": "The user configured static routes.",
                                "example": [
                                    {
                                        "network": "192.168.24.0/24",
                                        "nextHop": "10.0.0.4"
                                    },
                                    {
                                        "network": "192.168.25.0/24",
                                        "nextHop": "10.0.0.5"
                                    }
                                ],
                                "items": {
                                    "$ref": "#/components/schemas/StaticRoute"
                                },
                                "type": "array",
                                "uniqueItems": true
                            },
                            "virtualGatewayIP": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Connection using a Pureport Access Port or Packet Fabric Port.",
                "required": [
                    "billingTerm",
                    "highAvailability",
                    "location",
                    "name",
                    "primaryCustomerVlan",
                    "primaryPort",
                    "speed",
                    "type"
                ],
                "type": "object"
            },
            "PortProvider": {
                "description": "The provider for this port.",
                "enum": [
                    "PUREPORT",
                    "PACKET_FABRIC"
                ],
                "type": "string"
            },
            "PortSpeed": {
                "description": "The speed for this port in Mbps.",
                "enum": [
                    1000,
                    10000,
                    40000
                ],
                "example": 10000,
                "format": "int32",
                "type": "integer"
            },
            "PortState": {
                "description": "The current state of the port.",
                "enum": [
                    "REQUESTED",
                    "ACTIVE",
                    "DELETED"
                ],
                "type": "string"
            },
            "ProviderLink": {
                "description": "Link between Pureport infrastructure and an external connection provider.",
                "example": {
                    "availabilityDomain": "PRIMARY",
                    "href": "/providerLinks/us-wdc-aws3",
                    "id": "us-wdc-aws3",
                    "maxAvailableBandwidth": 10000,
                    "pod": {
                        "href": "/pods/us-wdc-2a",
                        "id": "us-wdc-2a",
                        "title": "us-wdc-2a"
                    },
                    "provider": "AWS",
                    "providerId": "dxcon-fgfy0cdo",
                    "providerRegion": "us-east-1",
                    "speed": 10000,
                    "status": "AVAILABLE",
                    "supportedConnectionTypes": [
                        "AWS_DIRECT_CONNECT"
                    ],
                    "vlans": "100-149"
                },
                "properties": {
                    "availabilityDomain": {
                        "$ref": "#/components/schemas/AvailabilityDomain"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the provider link.",
                        "example": "us-wdc-aws3",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "maxAvailableBandwidth": {
                        "description": "The maximum available bandwidth of the link in Mbps.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "pod": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "provider": {
                        "$ref": "#/components/schemas/ConnectionProvider"
                    },
                    "providerId": {
                        "description": "The id of the provider side resource.",
                        "example": "dxcon-fgfy0cdo",
                        "type": "string"
                    },
                    "providerRegion": {
                        "description": "The region of the provider side resource.",
                        "example": "us-east-1",
                        "type": "string"
                    },
                    "speed": {
                        "description": "The speed of the link in Mbps.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ProviderLinkStatus"
                    },
                    "supportedConnectionTypes": {
                        "description": "The types of connection this provider link will be used for.",
                        "example": [
                            "AWS_DIRECT_CONNECT"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/ConnectionType"
                        },
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                    },
                    "vlans": {
                        "description": "A range of vlans available on this link.",
                        "example": "100-149",
                        "pattern": "\\d{1,4}(-\\d{1,4})?(,\\d{1,4}(-\\d{1,4})?)*",
                        "type": "string"
                    }
                },
                "required": [
                    "availabilityDomain",
                    "id",
                    "maxAvailableBandwidth",
                    "pod",
                    "provider",
                    "providerId",
                    "speed",
                    "status",
                    "supportedConnectionTypes",
                    "vlans"
                ],
                "type": "object"
            },
            "ProviderLinkStatus": {
                "description": "The current status of this link.",
                "enum": [
                    "AVAILABLE",
                    "UNAVAILABLE"
                ],
                "type": "string"
            },
            "ProviderVlan": {
                "description": "A Virtual LAN",
                "properties": {
                    "allocated": {
                        "description": "Whether the vlan has been allocated.",
                        "type": "boolean"
                    },
                    "lastAllocatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastDeallocatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "speed": {
                        "description": "The speed of the vlan in Mbps.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "vlan": {
                        "description": "The vlan number.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "allocated",
                    "vlan"
                ],
                "type": "object"
            },
            "PublicPeeringBlock": {
                "description": "CIDR blocks for Public Peering.",
                "properties": {
                    "cidrBlock": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the public peering block.",
                        "example": "pubpeer-Iv41wb5_NbqF6oef2zjxmw",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "cidrBlock"
                ],
                "type": "object"
            },
            "PublicPeeringPoolStats": {
                "description": "Statistics on the allocation of public peering IP addresses.",
                "properties": {
                    "time": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "totalAllocatedIps": {
                        "description": "The total number of IP addresses already allocated.",
                        "example": 16,
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "totalBlocks": {
                        "description": "The total number of blocks.",
                        "example": 1,
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "totalDeletedIps": {
                        "description": "The total number of IP addresses marked as deleted.",
                        "example": 0,
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "totalFreeIps": {
                        "description": "The total number of IP addresses marked as free.",
                        "example": 240,
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "totalIps": {
                        "description": "The total number of IP addresses.",
                        "example": 256,
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "totalSubnets": {
                        "description": "The total number of subnets.",
                        "example": 64,
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ResourceLimit": {
                "description": "A representation of limitations between two Pureport resources.",
                "example": {
                    "childResourceType": "NETWORK",
                    "href": "/accounts/ac-9ntgDlC2sW6TISmceo-Xsg/limits/NETWORK",
                    "limit": 20,
                    "parentResourceId": "ac-9ntgDlC2sW6TISmceo-Xsg",
                    "parentResourceType": "ACCOUNT"
                },
                "properties": {
                    "childResourceType": {
                        "$ref": "#/components/schemas/ResourceType"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "limit": {
                        "description": "The number of child resources to limit to for the specified parent.",
                        "format": "int32",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "parentResourceId": {
                        "description": "The unique identifier of the parent resource.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "parentResourceType": {
                        "$ref": "#/components/schemas/ResourceType"
                    }
                },
                "required": [
                    "childResourceType",
                    "limit"
                ],
                "type": "object"
            },
            "ResourceType": {
                "enum": [
                    "MEMBER",
                    "ROLE",
                    "CONNECTION",
                    "NETWORK",
                    "ACCOUNT",
                    "CLOUD_SERVICE_ROUTE"
                ],
                "type": "string"
            },
            "Role": {
                "description": "A named set of permissions for an account.",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "description": {
                        "description": "The description of the role.",
                        "example": "Read Only users",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the role.",
                        "example": "role-Hlzbibun6IqFpRs1nEALGA",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the role.",
                        "example": "Read Only",
                        "type": "string"
                    },
                    "permissions": {
                        "additionalProperties": {
                            "additionalProperties": {
                                "description": "The permission set for users with this role.",
                                "example": false,
                                "type": "boolean"
                            },
                            "description": "The permission set for users with this role.",
                            "example": {
                                "accounts": {
                                    "all": false,
                                    "create": false,
                                    "delete": false,
                                    "read": false,
                                    "update": false
                                },
                                "all": {
                                    "all": false,
                                    "create": false,
                                    "delete": false,
                                    "read": true,
                                    "update": false
                                },
                                "apikeys": {
                                    "all": false,
                                    "create": false,
                                    "delete": false,
                                    "read": false,
                                    "update": false
                                },
                                "audit": {
                                    "all": false,
                                    "create": false,
                                    "delete": false,
                                    "read": false,
                                    "update": false
                                },
                                "billing": {
                                    "all": false,
                                    "create": false,
                                    "delete": false,
                                    "read": false,
                                    "update": false
                                },
                                "members": {
                                    "all": false,
                                    "create": false,
                                    "delete": false,
                                    "read": false,
                                    "update": false
                                },
                                "networks": {
                                    "all": false,
                                    "create": false,
                                    "delete": false,
                                    "read": false,
                                    "update": false
                                },
                                "ports": {
                                    "all": false,
                                    "create": false,
                                    "delete": false,
                                    "read": false,
                                    "update": false
                                },
                                "roles": {
                                    "all": false,
                                    "create": false,
                                    "delete": false,
                                    "read": false,
                                    "update": false
                                }
                            },
                            "type": "object"
                        },
                        "description": "The permission set for users with this role.",
                        "example": {
                            "accounts": {
                                "all": false,
                                "create": false,
                                "delete": false,
                                "read": false,
                                "update": false
                            },
                            "all": {
                                "all": false,
                                "create": false,
                                "delete": false,
                                "read": true,
                                "update": false
                            },
                            "apikeys": {
                                "all": false,
                                "create": false,
                                "delete": false,
                                "read": false,
                                "update": false
                            },
                            "audit": {
                                "all": false,
                                "create": false,
                                "delete": false,
                                "read": false,
                                "update": false
                            },
                            "billing": {
                                "all": false,
                                "create": false,
                                "delete": false,
                                "read": false,
                                "update": false
                            },
                            "members": {
                                "all": false,
                                "create": false,
                                "delete": false,
                                "read": false,
                                "update": false
                            },
                            "networks": {
                                "all": false,
                                "create": false,
                                "delete": false,
                                "read": false,
                                "update": false
                            },
                            "ports": {
                                "all": false,
                                "create": false,
                                "delete": false,
                                "read": false,
                                "update": false
                            },
                            "roles": {
                                "all": false,
                                "create": false,
                                "delete": false,
                                "read": false,
                                "update": false
                            }
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "account",
                    "name"
                ],
                "type": "object"
            },
            "RoutingType": {
                "description": "The method to use for determining network routes.",
                "enum": [
                    "STATIC",
                    "BGP"
                ],
                "type": "string"
            },
            "SiteIPSecVPNConnection": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Connection"
                    },
                    {
                        "properties": {
                            "authType": {
                                "$ref": "#/components/schemas/IPSecAuthenticationType"
                            },
                            "bfd": {
                                "$ref": "#/components/schemas/BFDConfiguration"
                            },
                            "bgpAlertPercent": {
                                "description": "The percentage of BGP routes of the maximum before we start alerting.",
                                "format": "int32",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            },
                            "bgpMaximumPrefix": {
                                "description": "The maximum number of BGP route prefixes to advertise.",
                                "format": "int32",
                                "maximum": 4000,
                                "minimum": 10,
                                "type": "integer"
                            },
                            "bgpPasswordConfiguration": {
                                "$ref": "#/components/schemas/BGPPasswordConfiguration"
                            },
                            "bgpRestartInterval": {
                                "description": "The interval number of minutes after BGP shutdown that we will wait before attempting to bring up BGP.",
                                "format": "int32",
                                "maximum": 10,
                                "minimum": 1,
                                "type": "integer"
                            },
                            "enableBGPPassword": {
                                "deprecated": true,
                                "type": "boolean"
                            },
                            "ikeV1": {
                                "$ref": "#/components/schemas/IKEV1Config"
                            },
                            "ikeV2": {
                                "$ref": "#/components/schemas/IKEV2Config"
                            },
                            "ikeVersion": {
                                "$ref": "#/components/schemas/IKEVersion"
                            },
                            "physicalAddress": {
                                "$ref": "#/components/schemas/PhysicalAddress"
                            },
                            "primaryCustomerRouterIP": {
                                "type": "string"
                            },
                            "primaryKey": {
                                "description": "IPsec pre-shared key (PSK) override for the primary gateway.",
                                "example": "hEwHpLc3yFHWkTzDUiipEP7LMGtgn7aTA",
                                "type": "string"
                            },
                            "routingType": {
                                "$ref": "#/components/schemas/VPNRoutingType"
                            },
                            "secondaryCustomerRouterIP": {
                                "type": "string"
                            },
                            "secondaryKey": {
                                "description": "IPsec pre-shared key (PSK) override for the secondary gateway.",
                                "example": "zi15cDfVLVEgxLN0q3w17ydAvPzaQNriB",
                                "type": "string"
                            },
                            "trafficSelectors": {
                                "description": "The traffic selectors to apply for routing.",
                                "example": [
                                    {
                                        "customerSide": "20.2.1.0/24",
                                        "pureportSide": "52.92.32.0/22"
                                    },
                                    {
                                        "customerSide": "20.2.1.0/24",
                                        "pureportSide": "20.1.0.0/16"
                                    },
                                    {
                                        "customerSide": "20.2.1.0/24",
                                        "pureportSide": "100.64.0.0/10"
                                    }
                                ],
                                "items": {
                                    "$ref": "#/components/schemas/TrafficSelectorMapping"
                                },
                                "maxItems": 100,
                                "minItems": 0,
                                "type": "array",
                                "uniqueItems": true
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Connection using VPN over IPSec",
                "required": [
                    "authType",
                    "billingTerm",
                    "highAvailability",
                    "ikeVersion",
                    "location",
                    "name",
                    "primaryCustomerRouterIP",
                    "routingType",
                    "speed",
                    "type"
                ],
                "type": "object"
            },
            "Sort": {
                "properties": {
                    "direction": {
                        "$ref": "#/components/schemas/SortDirection"
                    },
                    "property": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SortDirection": {
                "enum": [
                    "ASC",
                    "DESC"
                ],
                "type": "string"
            },
            "StandardGateway": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Gateway"
                    },
                    {
                        "properties": {
                            "osInsidePortId": {
                                "readOnly": true,
                                "type": "string"
                            },
                            "osNetworkId": {
                                "readOnly": true,
                                "type": "string"
                            },
                            "osOutsidePortId": {
                                "readOnly": true,
                                "type": "string"
                            },
                            "osServerId": {
                                "readOnly": true,
                                "type": "string"
                            },
                            "vlan": {
                                "description": "The vlan number.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                            },
                            "vrrpStatus": {
                                "$ref": "#/components/schemas/VRRPStatus"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Pureport network gateway.",
                "type": "object"
            },
            "StaticRoute": {
                "description": "The IKE Phase configuration.",
                "example": [
                    {
                        "network": "192.168.24.0/24",
                        "nextHop": "10.0.0.4"
                    },
                    {
                        "network": "192.168.25.0/24",
                        "nextHop": "10.0.0.5"
                    }
                ],
                "properties": {
                    "network": {
                        "type": "string"
                    },
                    "nextHop": {
                        "type": "string"
                    }
                },
                "required": [
                    "network",
                    "nextHop"
                ],
                "type": "object"
            },
            "SupportedConnection": {
                "description": "Connection configuration currently supported by Pureport",
                "properties": {
                    "billingPlans": {
                        "description": "Billing plans available for this configuration.",
                        "items": {
                            "$ref": "#/components/schemas/BillingPlan"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "billingProductIds": {
                        "additionalProperties": {
                            "description": "Association between billing providers and the product to bill under for this configuration.",
                            "type": "string"
                        },
                        "description": "Association between billing providers and the product to bill under for this configuration.",
                        "type": "object"
                    },
                    "groups": {
                        "description": "The groups this connection configuration belongs to.",
                        "example": [
                            {
                                "href": "/supportedConnections/groups/default",
                                "id": "default"
                            }
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "type": "array",
                        "uniqueItems": true
                    },
                    "highAvailability": {
                        "description": "Whether connections using this configuration have redundant gateways for failover.",
                        "type": "boolean"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the supported connection configuration.",
                        "example": "us-wdc-awsdx-private-50-ha",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "peeringType": {
                        "$ref": "#/components/schemas/PeeringType"
                    },
                    "pending": {
                        "description": "Whether this configuration is currently available or requires additional steps from Pureport.",
                        "type": "boolean"
                    },
                    "reachableCloudRegions": {
                        "description": "The cloud regions this configuration allows.",
                        "example": [
                            {
                                "href": "/cloudRegions/aws-us-east-1",
                                "id": "aws-us-east-1",
                                "title": "US East (N. Virginia)"
                            }
                        ],
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "type": "array",
                        "uniqueItems": true
                    },
                    "requiresApproval": {
                        "description": "Whether connections using this configuration require approval from Pureport to provision.",
                        "type": "boolean"
                    },
                    "speed": {
                        "$ref": "#/components/schemas/ConnectionSpeed"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ConnectionType"
                    }
                },
                "required": [
                    "billingProductIds",
                    "highAvailability",
                    "location",
                    "peeringType",
                    "pending",
                    "requiresApproval",
                    "speed",
                    "type"
                ],
                "type": "object"
            },
            "SupportedConnectionGroup": {
                "description": "A named grouping of Supported Connections",
                "properties": {
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the supported connection group.",
                        "example": "default",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of this group.",
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "SupportedPort": {
                "description": "Port configuration currently supported by Pureport",
                "properties": {
                    "availabilityDomains": {
                        "description": "The availability domains supported by this configuration.",
                        "example": [
                            "PRIMARY",
                            "SECONDARY"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/AvailabilityDomain"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "billingPlans": {
                        "description": "The billing plans supported by this configuration.",
                        "items": {
                            "$ref": "#/components/schemas/BillingPlan"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "facility": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "mediaTypes": {
                        "description": "The media types supported by this configuration.",
                        "example": [
                            "SMF",
                            "LX"
                        ],
                        "items": {
                            "description": "The media types supported by this configuration.",
                            "example": "[\"SMF\",\"LX\"]",
                            "type": "string"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "provider": {
                        "$ref": "#/components/schemas/PortProvider"
                    },
                    "speed": {
                        "$ref": "#/components/schemas/PortSpeed"
                    }
                },
                "type": "object"
            },
            "Task": {
                "description": "An asynchronous Pureport operation.",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "children": {
                        "description": "A list of asset links of child tasks.",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "completedAt": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "connection": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "description": {
                        "description": "The description.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "gateway": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the task.",
                        "example": "task-etjeQX6ktpylOUfTs2Hliw",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "network": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "result": {
                        "description": "The result of the task.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "startedAt": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "state": {
                        "$ref": "#/components/schemas/TaskState"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TaskType"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "TaskState": {
                "enum": [
                    "CREATED",
                    "RUNNING",
                    "COMPLETED",
                    "FAILED",
                    "DELETED",
                    "AGGREGATE"
                ],
                "type": "string"
            },
            "TaskType": {
                "description": "The type.",
                "enum": [
                    "IPSEC_RESTART",
                    "PING",
                    "CHANGE_CONNECTION_SPEED",
                    "CREATE_OR_UPDATE_CONNECTION",
                    "DELETE_CONNECTION",
                    "STOP_GATEWAY",
                    "START_GATEWAY",
                    "DELETE_GATEWAY",
                    "RESPAWN_GATEWAYS",
                    "RESPAWN_NETWORK",
                    "RESPAWN_WITH_CLOUD_SERVICES"
                ],
                "type": "string"
            },
            "TimeUnit": {
                "enum": [
                    "HOURS",
                    "DAYS"
                ],
                "type": "string"
            },
            "TrafficSelectorMapping": {
                "description": "A pair of local and remote addresses for use in VPN Traffic Selectors.",
                "example": [
                    {
                        "customerSide": "20.2.1.0/24",
                        "pureportSide": "52.92.32.0/22"
                    },
                    {
                        "customerSide": "20.2.1.0/24",
                        "pureportSide": "20.1.0.0/16"
                    },
                    {
                        "customerSide": "20.2.1.0/24",
                        "pureportSide": "100.64.0.0/10"
                    }
                ],
                "properties": {
                    "customerSide": {
                        "type": "string"
                    },
                    "pureportSide": {
                        "type": "string"
                    }
                },
                "required": [
                    "customerSide",
                    "pureportSide"
                ],
                "type": "object"
            },
            "TrafficType": {
                "enum": [
                    "ALL",
                    "BACKBONE"
                ],
                "type": "string"
            },
            "UsageByConnectionAndTimeOptions": {
                "properties": {
                    "connectionIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "date": {
                        "$ref": "#/components/schemas/DateFilter"
                    },
                    "timeUnit": {
                        "$ref": "#/components/schemas/TimeUnit"
                    },
                    "trafficType": {
                        "$ref": "#/components/schemas/TrafficType"
                    }
                },
                "required": [
                    "connectionIds"
                ],
                "type": "object"
            },
            "UsageByConnectionOptions": {
                "properties": {
                    "date": {
                        "$ref": "#/components/schemas/DateFilter"
                    },
                    "includeChildAccounts": {
                        "type": "boolean"
                    },
                    "timeUnit": {
                        "$ref": "#/components/schemas/TimeUnit"
                    },
                    "trafficType": {
                        "$ref": "#/components/schemas/TrafficType"
                    }
                },
                "type": "object"
            },
            "UsageByNetworkAndTimeOptions": {
                "properties": {
                    "date": {
                        "$ref": "#/components/schemas/DateFilter"
                    },
                    "includeChildAccounts": {
                        "type": "boolean"
                    },
                    "timeUnit": {
                        "$ref": "#/components/schemas/TimeUnit"
                    },
                    "trafficType": {
                        "$ref": "#/components/schemas/TrafficType"
                    }
                },
                "type": "object"
            },
            "User": {
                "description": "A User of the Pureport console.",
                "properties": {
                    "company": {
                        "description": "The company name.",
                        "example": "Pureport, Inc",
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string"
                    },
                    "email": {
                        "description": "The email address.",
                        "example": "johndoe@email.com",
                        "type": "string"
                    },
                    "firstName": {
                        "description": "The first name.",
                        "example": "John",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the user.",
                        "example": "user-8N-Yo3rD-rEuA5lK4yE-WA",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "lastName": {
                        "description": "The last name.",
                        "example": "Doe",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "phoneNumber": {
                        "description": "The phone number.",
                        "example": "919-867-5309",
                        "maxLength": 32,
                        "minLength": 0,
                        "type": "string"
                    },
                    "username": {
                        "description": "The assigned username.",
                        "example": "Google_113964653136786632074",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "firstName",
                    "lastName",
                    "username"
                ],
                "type": "object"
            },
            "UserDomain": {
                "description": "Configuration for SAML provider email domains",
                "properties": {
                    "emailDomains": {
                        "description": "The email domains associated with the provider.",
                        "example": [
                            "samltest.id"
                        ],
                        "items": {
                            "description": "The email domains associated with the provider.",
                            "example": "[\"samltest.id\"]",
                            "type": "string"
                        },
                        "maxItems": 2147483647,
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                    },
                    "href": {
                        "description": "The URI of the Pureport asset.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The id is a unique identifier representing the configuration.",
                        "example": "ud-KtuuYyEOW3FlmebRaw52DA",
                        "type": "string"
                    },
                    "provider": {
                        "description": "The name of the SAML provider.",
                        "example": "SAMLtest",
                        "type": "string"
                    }
                },
                "required": [
                    "emailDomains",
                    "provider"
                ],
                "type": "object"
            },
            "VPNAuthConfig": {
                "description": "VPN authentication configuration.",
                "discriminator": {
                    "mapping": {
                        "PSK": "#/components/schemas/PSKAuthConfig"
                    },
                    "propertyName": "type"
                },
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/IPSecAuthenticationType"
                    }
                },
                "type": "object"
            },
            "VPNGateway": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Gateway"
                    },
                    {
                        "properties": {
                            "auth": {
                                "$ref": "#/components/schemas/VPNAuthConfig"
                            },
                            "customerGatewayIP": {
                                "readOnly": true,
                                "type": "string"
                            },
                            "customerVtiIP": {
                                "readOnly": true,
                                "type": "string"
                            },
                            "ipsecStatus": {
                                "$ref": "#/components/schemas/IKEState"
                            },
                            "osInsidePortId": {
                                "readOnly": true,
                                "type": "string"
                            },
                            "osOutsidePortId": {
                                "readOnly": true,
                                "type": "string"
                            },
                            "osServerId": {
                                "readOnly": true,
                                "type": "string"
                            },
                            "pureportGatewayIP": {
                                "readOnly": true,
                                "type": "string"
                            },
                            "pureportVtiIP": {
                                "readOnly": true,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ],
                "description": "Pureport network gateway for VPN connections.",
                "type": "object"
            },
            "VPNRoutingType": {
                "description": "The VPN Routing Type.",
                "enum": [
                    "POLICY_BASED",
                    "ROUTE_BASED_STATIC",
                    "ROUTE_BASED_BGP"
                ],
                "type": "string"
            },
            "VRRPNextHop": {
                "description": "VRRP Status information.",
                "properties": {
                    "nextHopIp": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "status": {
                        "description": "The current VRRP nexthop gateway status.",
                        "enum": [
                            "GOOD",
                            "BAD"
                        ],
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VRRPState": {
                "description": "The current VRRP state for the gateway.",
                "enum": [
                    "MASTER",
                    "BACKUP"
                ],
                "type": "string"
            },
            "VRRPStatus": {
                "description": "VRRP Status information.",
                "properties": {
                    "nextHops": {
                        "description": "The VRRP next hop information.",
                        "items": {
                            "$ref": "#/components/schemas/VRRPNextHop"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "priority": {
                        "description": "The VRRP priority calculated for the gateway.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "state": {
                        "$ref": "#/components/schemas/VRRPState"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "OAuth2": {
                "flows": {
                    "clientCredentials": {
                        "scopes": {
                            "read": "Read Permission",
                            "write": "Write Permission"
                        },
                        "tokenUrl": "/login"
                    }
                },
                "in": "header",
                "type": "oauth2"
            }
        }
    },
    "info": {
        "contact": {
            "email": "support@pureport.com"
        },
        "description": "Pureport API",
        "title": "Pureport Control Plane",
        "version": "1.0.0"
    },
    "openapi": "3.0.1",
    "paths": {
        "/accounts": {
            "get": {
                "operationId": "findAllAccounts",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ids",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "uniqueItems": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "parentId",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Account"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List accounts",
                "tags": [
                    "accounts"
                ]
            },
            "post": {
                "operationId": "createAccount",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Account"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        },
                        "description": "default response",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "style": "simple"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Add new account",
                "tags": [
                    "accounts"
                ]
            }
        },
        "/accounts/{accountId}": {
            "delete": {
                "operationId": "deleteAccount",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Delete account",
                "tags": [
                    "accounts"
                ]
            },
            "get": {
                "operationId": "getAccount",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get account details",
                "tags": [
                    "accounts"
                ]
            },
            "put": {
                "operationId": "updateAccount",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Account"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Update account",
                "tags": [
                    "accounts"
                ]
            }
        },
        "/accounts/{accountId}/apikeys": {
            "get": {
                "operationId": "findApiKeys",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ApiKey"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List API keys for an account",
                "tags": [
                    "apikeys"
                ]
            },
            "post": {
                "operationId": "createApiKey",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiKey"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKey"
                                }
                            }
                        },
                        "description": "default response",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "style": "simple"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Create a new API key",
                "tags": [
                    "apikeys"
                ]
            }
        },
        "/accounts/{accountId}/apikeys/{key}": {
            "delete": {
                "operationId": "deleteApiKey",
                "parameters": [
                    {
                        "in": "path",
                        "name": "key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Delete API Key",
                "tags": [
                    "apikeys"
                ]
            },
            "get": {
                "operationId": "getApiKey",
                "parameters": [
                    {
                        "in": "path",
                        "name": "key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKey"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get API Key details",
                "tags": [
                    "apikeys"
                ]
            },
            "put": {
                "operationId": "updateApiKey",
                "parameters": [
                    {
                        "in": "path",
                        "name": "key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiKey"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKey"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Update API Key",
                "tags": [
                    "apikeys"
                ]
            }
        },
        "/accounts/{accountId}/auditLog": {
            "get": {
                "operationId": "findAuditLogs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "pageNumber",
                        "schema": {
                            "default": 0,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "default": 100,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sortDirection",
                        "schema": {
                            "$ref": "#/components/schemas/SortDirection"
                        }
                    },
                    {
                        "in": "query",
                        "name": "startTime",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "endTime",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "includeChildAccounts",
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "include child object records if specified subject is of type NETWORK or CONNECTION",
                        "in": "query",
                        "name": "includeChildSubjects",
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "eventTypes",
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/AuditEntryEventType"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "in": "query",
                        "name": "result",
                        "schema": {
                            "$ref": "#/components/schemas/AuditEntryResult"
                        }
                    },
                    {
                        "in": "query",
                        "name": "principalId",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ipAddress",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "correlationId",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "subjectId",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "subjectType",
                        "schema": {
                            "$ref": "#/components/schemas/AuditEntrySubjectType"
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAuditEntry"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "tags": [
                    "audit"
                ]
            }
        },
        "/accounts/{accountId}/billing": {
            "delete": {
                "operationId": "deletePaymentInformation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Delete payment method",
                "tags": [
                    "billing"
                ]
            },
            "get": {
                "operationId": "findBillingForAccount",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountBilling"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Payment method for account",
                "tags": [
                    "billing"
                ]
            },
            "post": {
                "operationId": "addPaymentInformation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountBilling"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountBilling"
                                }
                            }
                        },
                        "description": "default response",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "style": "simple"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Add payment method",
                "tags": [
                    "billing"
                ]
            },
            "put": {
                "operationId": "updatePaymentInformation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountBilling"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountBilling"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Update payment method",
                "tags": [
                    "billing"
                ]
            }
        },
        "/accounts/{accountId}/billing/configured": {
            "get": {
                "operationId": "isBillingConfiguredForAccount",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ancestorOnly",
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Payment method configured for account",
                "tags": [
                    "billing"
                ]
            }
        },
        "/accounts/{accountId}/billing/verify": {
            "post": {
                "operationId": "verifyPaymentInformation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountBillingVerification"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountBilling"
                                }
                            }
                        },
                        "description": "default response",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "style": "simple"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Verify payment method",
                "tags": [
                    "billing"
                ]
            }
        },
        "/accounts/{accountId}/canVerify": {
            "get": {
                "operationId": "canVerifyAccount",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Can the current user verify the account",
                "tags": [
                    "accounts"
                ]
            }
        },
        "/accounts/{accountId}/connections": {
            "get": {
                "operationId": "findConnections",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Connection"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List connections across all networks for the account",
                "tags": [
                    "connections"
                ]
            }
        },
        "/accounts/{accountId}/consent": {
            "get": {
                "operationId": "hasConsent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Account MSA and AUP have not been accepted"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountConsent"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Account consent to Master Service Agreement and Acceptable Use Policy",
                "tags": [
                    "account consent"
                ]
            },
            "post": {
                "operationId": "consent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountConsent"
                                }
                            }
                        },
                        "description": "default response",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "style": "simple"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Consent to Master Service Agreement and Acceptable Use Policy for this account",
                "tags": [
                    "account consent"
                ]
            }
        },
        "/accounts/{accountId}/invites": {
            "get": {
                "operationId": "findAccountInvites",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AccountInvite"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List account invites",
                "tags": [
                    "account invitations"
                ]
            },
            "post": {
                "operationId": "inviteAccount",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountInvite"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountInvite"
                                }
                            }
                        },
                        "description": "default response",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "style": "simple"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Invite account member",
                "tags": [
                    "account invitations"
                ]
            }
        },
        "/accounts/{accountId}/invites/{inviteId}": {
            "delete": {
                "operationId": "deleteAccountInvite",
                "parameters": [
                    {
                        "in": "path",
                        "name": "inviteId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Delete account invite",
                "tags": [
                    "account invitations"
                ]
            },
            "get": {
                "operationId": "getAccountInvite",
                "parameters": [
                    {
                        "in": "path",
                        "name": "inviteId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountInvite"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get account invite",
                "tags": [
                    "account invitations"
                ]
            },
            "put": {
                "operationId": "updateAccountInvite",
                "parameters": [
                    {
                        "in": "query",
                        "name": "reinvite",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "inviteId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountInvite"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountInvite"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Update account invite",
                "tags": [
                    "account invitations"
                ]
            }
        },
        "/accounts/{accountId}/members": {
            "get": {
                "operationId": "findAccountMembers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AccountMember"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List account members",
                "tags": [
                    "account members"
                ]
            },
            "post": {
                "operationId": "addAccountMember",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountMember"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountMember"
                                }
                            }
                        },
                        "description": "default response",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "style": "simple"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Add account member",
                "tags": [
                    "account members"
                ]
            }
        },
        "/accounts/{accountId}/members/{userId}": {
            "delete": {
                "operationId": "deleteAccountMember",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Delete account member",
                "tags": [
                    "account members"
                ]
            },
            "get": {
                "operationId": "getAccountMember",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountMember"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get account member",
                "tags": [
                    "account members"
                ]
            },
            "put": {
                "operationId": "updateAccountMember",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountMember"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountMember"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Update account member",
                "tags": [
                    "account members"
                ]
            }
        },
        "/accounts/{accountId}/metrics/usageByConnection": {
            "post": {
                "operationId": "usageByConnection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/UsageByConnectionOptions"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/NetworkConnectionEgressIngress"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/NetworkConnectionEgressIngress"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Retrieve usage by connection",
                "tags": [
                    "account metrics"
                ]
            }
        },
        "/accounts/{accountId}/metrics/usageByConnectionAndTime": {
            "post": {
                "operationId": "usageByConnectionAndTime",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/UsageByConnectionAndTimeOptions"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ConnectionTimeEgressIngress"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ConnectionTimeEgressIngress"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Retrieve usage by connection and time",
                "tags": [
                    "account metrics"
                ]
            }
        },
        "/accounts/{accountId}/metrics/usageByNetworkAndTime": {
            "post": {
                "operationId": "usageByNetworkAndTime",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UsageByNetworkAndTimeOptions"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/NetworkTimeUsage"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/NetworkTimeUsage"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Retrieve usage by network over time",
                "tags": [
                    "account metrics"
                ]
            }
        },
        "/accounts/{accountId}/networks": {
            "get": {
                "operationId": "findNetworks",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Network"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List networks",
                "tags": [
                    "networks"
                ]
            },
            "post": {
                "operationId": "addNetwork",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Network"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Network"
                                }
                            }
                        },
                        "description": "default response",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "style": "simple"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Add new network",
                "tags": [
                    "networks"
                ]
            }
        },
        "/accounts/{accountId}/notifications": {
            "get": {
                "operationId": "findAccountNotifications",
                "parameters": [
                    {
                        "in": "query",
                        "name": "startTime",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "endTime",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "$ref": "#/components/schemas/AccountNotificationStatus"
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AccountNotification"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Retrieve all notifications for this account",
                "tags": [
                    "account notifications"
                ]
            },
            "post": {
                "operationId": "updateAccountNotificationsStatus",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "*/*": {
                            "schema": {
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/AccountNotificationStatus"
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Update an authenticated user's read status for account notifications",
                "tags": [
                    "account notifications"
                ]
            }
        },
        "/accounts/{accountId}/permissions": {
            "get": {
                "description": "Returns the effective set of permissions that the current subject has for the given account based on the roles they have been granted.",
                "operationId": "getAccountPermissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "additionalProperties": {
                                            "type": "boolean"
                                        },
                                        "type": "object"
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get permissions for account",
                "tags": [
                    "accounts"
                ]
            }
        },
        "/accounts/{accountId}/ports": {
            "get": {
                "operationId": "findPorts",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Port"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List ports",
                "tags": [
                    "ports"
                ]
            },
            "post": {
                "operationId": "addPort",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Port"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Port"
                                }
                            }
                        },
                        "description": "default response",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "style": "simple"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Add new port",
                "tags": [
                    "ports"
                ]
            }
        },
        "/accounts/{accountId}/roles": {
            "get": {
                "operationId": "findAllRoles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Role"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List account roles",
                "tags": [
                    "account roles"
                ]
            },
            "post": {
                "operationId": "createRole",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        },
                        "description": "default response",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "style": "simple"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Add account role",
                "tags": [
                    "account roles"
                ]
            }
        },
        "/accounts/{accountId}/roles/{roleId}": {
            "delete": {
                "operationId": "deleteRole",
                "parameters": [
                    {
                        "in": "path",
                        "name": "roleId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Delete role",
                "tags": [
                    "account roles"
                ]
            },
            "get": {
                "operationId": "getRole",
                "parameters": [
                    {
                        "in": "path",
                        "name": "roleId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get role details",
                "tags": [
                    "account roles"
                ]
            },
            "put": {
                "operationId": "updateRole",
                "parameters": [
                    {
                        "in": "path",
                        "name": "roleId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Update role",
                "tags": [
                    "account roles"
                ]
            }
        },
        "/accounts/{accountId}/supportedConnections": {
            "get": {
                "operationId": "getAccountSupportedConnections",
                "parameters": [
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/SupportedConnection"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List supported connections",
                "tags": [
                    "supported connections"
                ]
            }
        },
        "/accounts/{accountId}/supportedPorts": {
            "get": {
                "operationId": "getSupportedPorts",
                "parameters": [
                    {
                        "in": "query",
                        "name": "facility",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "includeProvisioned",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/SupportedPort"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List supported ports",
                "tags": [
                    "supported ports"
                ]
            }
        },
        "/cloudRegions": {
            "get": {
                "operationId": "getCloudRegions",
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CloudRegion"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List cloud regions",
                "tags": [
                    "cloud regions"
                ]
            }
        },
        "/cloudRegions/{cloudRegionId}": {
            "get": {
                "operationId": "getCloudRegion",
                "parameters": [
                    {
                        "in": "path",
                        "name": "cloudRegionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CloudRegion"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get cloud region details",
                "tags": [
                    "cloud regions"
                ]
            }
        },
        "/cloudServices": {
            "get": {
                "operationId": "getCloudServices",
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CloudService"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List cloud services",
                "tags": [
                    "cloud services"
                ]
            }
        },
        "/cloudServices/{cloudServiceId}": {
            "get": {
                "operationId": "getCloudService",
                "parameters": [
                    {
                        "in": "path",
                        "name": "cloudServiceId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CloudService"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get cloud service details",
                "tags": [
                    "cloud services"
                ]
            }
        },
        "/connections/{connectionId}": {
            "delete": {
                "operationId": "deleteConnection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "connectionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Connection"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Delete connection",
                "tags": [
                    "connections"
                ]
            },
            "get": {
                "operationId": "getConnection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "connectionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Connection"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get connection details",
                "tags": [
                    "connections"
                ]
            },
            "put": {
                "operationId": "updateConnection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "connectionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Connection"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Connection"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Update connection",
                "tags": [
                    "connections"
                ]
            }
        },
        "/connections/{connectionId}/tasks": {
            "get": {
                "operationId": "getConnectionTasks",
                "parameters": [
                    {
                        "in": "path",
                        "name": "connectionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Task"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List connection tasks",
                "tags": [
                    "tasks",
                    "connections"
                ]
            },
            "post": {
                "operationId": "createConnectionTask",
                "parameters": [
                    {
                        "in": "path",
                        "name": "connectionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        },
                        "description": "default response",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "style": "simple"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Add a new task",
                "tags": [
                    "tasks",
                    "connections"
                ]
            }
        },
        "/facilities": {
            "get": {
                "operationId": "findFacilities",
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Facility"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List facilities",
                "tags": [
                    "facilities"
                ]
            }
        },
        "/facilities/kml": {
            "get": {
                "operationId": "listFacilitiesAsKml",
                "responses": {
                    "default": {
                        "content": {
                            "application/vnd.google-earth.kml+xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List facilities (as KML)",
                "tags": [
                    "facilities"
                ]
            }
        },
        "/facilities/{facilityId}": {
            "get": {
                "operationId": "getFacility",
                "parameters": [
                    {
                        "in": "path",
                        "name": "facilityId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Facility"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get facility details",
                "tags": [
                    "facilities"
                ]
            }
        },
        "/gateways/{gatewayId}": {
            "get": {
                "operationId": "getGateway",
                "parameters": [
                    {
                        "in": "path",
                        "name": "gatewayId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gateway"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get gateway details",
                "tags": [
                    "gateways"
                ]
            }
        },
        "/gateways/{gatewayId}/bgpRoutes": {
            "get": {
                "operationId": "getGatewayBGPRoutes",
                "parameters": [
                    {
                        "in": "path",
                        "name": "gatewayId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/BGPRoute"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get gateway bgp routes",
                "tags": [
                    "gateways"
                ]
            }
        },
        "/gateways/{gatewayId}/ipRoutes": {
            "get": {
                "operationId": "getGatewayIPRoutes",
                "parameters": [
                    {
                        "in": "path",
                        "name": "gatewayId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/IPRoute"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get gateway ip routes",
                "tags": [
                    "gateways"
                ]
            }
        },
        "/gateways/{gatewayId}/metrics/connectivity": {
            "post": {
                "operationId": "connectivityOverTime",
                "parameters": [
                    {
                        "in": "path",
                        "name": "gatewayId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DateFilter"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ConnectivityByGateway"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ConnectivityByGateway"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Retrieve connectivity details over time for gateway",
                "tags": [
                    "gateway metrics",
                    "gateways"
                ]
            }
        },
        "/gateways/{gatewayId}/metrics/connectivity/current": {
            "get": {
                "operationId": "currentConnectivity",
                "parameters": [
                    {
                        "in": "path",
                        "name": "gatewayId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ConnectivityByGateway"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ConnectivityByGateway"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Retrieve latest connectivity details for gateway",
                "tags": [
                    "gateway metrics",
                    "gateways"
                ]
            }
        },
        "/gateways/{gatewayId}/respawn": {
            "post": {
                "operationId": "respawnGateway",
                "parameters": [
                    {
                        "in": "query",
                        "name": "latest",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "gatewayId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gateway"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Respawn gateway.",
                "tags": [
                    "gateways"
                ]
            }
        },
        "/gateways/{gatewayId}/start": {
            "post": {
                "operationId": "startGateway",
                "parameters": [
                    {
                        "in": "path",
                        "name": "gatewayId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gateway"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Start gateway",
                "tags": [
                    "gateways"
                ]
            }
        },
        "/gateways/{gatewayId}/stop": {
            "post": {
                "operationId": "stopGateway",
                "parameters": [
                    {
                        "in": "path",
                        "name": "gatewayId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gateway"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Stop gateway",
                "tags": [
                    "gateways"
                ]
            }
        },
        "/gateways/{gatewayId}/tasks": {
            "get": {
                "operationId": "getGatewayTasks",
                "parameters": [
                    {
                        "in": "path",
                        "name": "gatewayId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Task"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List connection tasks",
                "tags": [
                    "tasks",
                    "gateways"
                ]
            },
            "post": {
                "operationId": "createGatewayTask",
                "parameters": [
                    {
                        "in": "path",
                        "name": "gatewayId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        },
                        "description": "default response",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "style": "simple"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Add a new task",
                "tags": [
                    "tasks",
                    "gateways"
                ]
            }
        },
        "/help": {
            "get": {
                "operationId": "getHelpUrl",
                "parameters": [
                    {
                        "in": "query",
                        "name": "redirectTo",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Retrieve the URL for the help portal using an SSO login",
                "tags": [
                    "help"
                ]
            }
        },
        "/invites": {
            "post": {
                "operationId": "acceptAllInvites",
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AccountInvite"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Accept all invites for the current user",
                "tags": [
                    "account invitations"
                ]
            }
        },
        "/locations": {
            "get": {
                "operationId": "findLocations",
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Location"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List locations",
                "tags": [
                    "locations"
                ]
            }
        },
        "/locations/{locationId}": {
            "get": {
                "operationId": "getLocation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "locationId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get location details",
                "tags": [
                    "locations"
                ]
            }
        },
        "/login": {
            "post": {
                "operationId": "login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "summary": "Login with an API Key",
                "tags": [
                    "auth"
                ]
            }
        },
        "/login/refresh": {
            "post": {
                "operationId": "loginWithRefreshToken",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginWithRefreshTokenRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "summary": "Login with a refresh token",
                "tags": [
                    "auth"
                ]
            }
        },
        "/networks/{networkId}": {
            "delete": {
                "operationId": "deleteNetwork",
                "parameters": [
                    {
                        "in": "path",
                        "name": "networkId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Delete network",
                "tags": [
                    "networks"
                ]
            },
            "get": {
                "operationId": "getNetwork",
                "parameters": [
                    {
                        "in": "path",
                        "name": "networkId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Network"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get network details",
                "tags": [
                    "networks"
                ]
            },
            "put": {
                "operationId": "updateNetwork",
                "parameters": [
                    {
                        "in": "path",
                        "name": "networkId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Network"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Network"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Update network",
                "tags": [
                    "networks"
                ]
            }
        },
        "/networks/{networkId}/connections": {
            "get": {
                "operationId": "getConnections",
                "parameters": [
                    {
                        "in": "path",
                        "name": "networkId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Connection"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List network connections",
                "tags": [
                    "connections"
                ]
            },
            "post": {
                "operationId": "addConnection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "networkId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Connection"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Connection"
                                }
                            }
                        },
                        "description": "default response",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "style": "simple"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Add new connection",
                "tags": [
                    "connections"
                ]
            }
        },
        "/networks/{networkId}/respawn": {
            "post": {
                "operationId": "respawn",
                "parameters": [
                    {
                        "in": "path",
                        "name": "networkId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Network"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Respawn controllers on network",
                "tags": [
                    "networks"
                ]
            }
        },
        "/options": {
            "get": {
                "operationId": "getOptions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "items": {
                                            "$ref": "#/components/schemas/Option"
                                        },
                                        "type": "array"
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get available options",
                "tags": [
                    "options"
                ]
            }
        },
        "/options/isBackbone": {
            "get": {
                "operationId": "isBackbone",
                "parameters": [
                    {
                        "in": "query",
                        "name": "portId",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "locationId",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "speed",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "billingTerm",
                        "schema": {
                            "$ref": "#/components/schemas/BillingTerm"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "boolean"
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get whether this configuration will have longHaul related charges.",
                "tags": [
                    "options"
                ]
            }
        },
        "/options/{type}": {
            "get": {
                "operationId": "getOption",
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Option"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get a single available option list",
                "tags": [
                    "options"
                ]
            }
        },
        "/ports/{portId}": {
            "delete": {
                "operationId": "deletePort",
                "parameters": [
                    {
                        "in": "path",
                        "name": "portId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Delete port",
                "tags": [
                    "ports"
                ]
            },
            "get": {
                "operationId": "getPort",
                "parameters": [
                    {
                        "in": "path",
                        "name": "portId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Port"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get port details",
                "tags": [
                    "ports"
                ]
            },
            "put": {
                "operationId": "updatePort",
                "parameters": [
                    {
                        "in": "path",
                        "name": "portId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Port"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Port"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Update port",
                "tags": [
                    "ports"
                ]
            }
        },
        "/ports/{portId}/accounts": {
            "get": {
                "operationId": "getAccountsUsingPort",
                "parameters": [
                    {
                        "in": "path",
                        "name": "portId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Link"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get accounts using this port",
                "tags": [
                    "ports"
                ]
            }
        },
        "/ports/{portId}/loa": {
            "get": {
                "operationId": "getPortLOA",
                "parameters": [
                    {
                        "in": "path",
                        "name": "portId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get port letter of authorization",
                "tags": [
                    "ports"
                ]
            }
        },
        "/supportedConnections/{supportedConnectionId}": {
            "get": {
                "operationId": "getSupportedConnection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "supportedConnectionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportedConnection"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get supported connection details",
                "tags": [
                    "supported connections"
                ]
            }
        },
        "/tasks": {
            "get": {
                "operationId": "getTasks",
                "parameters": [
                    {
                        "in": "query",
                        "name": "pageNumber",
                        "schema": {
                            "default": 0,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "schema": {
                            "default": 100,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "$ref": "#/components/schemas/TaskState"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTask"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "List Tasks",
                "tags": [
                    "tasks"
                ]
            }
        },
        "/tasks/{taskId}": {
            "get": {
                "operationId": "getTask",
                "parameters": [
                    {
                        "in": "path",
                        "name": "taskId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get Task details",
                "tags": [
                    "tasks"
                ]
            }
        },
        "/thirdParty/packetFabric/customers/{marketCode}": {
            "get": {
                "operationId": "getPacketFabric",
                "parameters": [
                    {
                        "in": "path",
                        "name": "marketCode",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PacketFabricCustomer"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "tags": [
                    "third party"
                ]
            }
        },
        "/userDomainProvider": {
            "get": {
                "operationId": "getUserDomainProvider",
                "parameters": [
                    {
                        "in": "query",
                        "name": "emailAddress",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "An invalid email address was provided"
                    },
                    "404": {
                        "description": "Could not find a valid user domain provider"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "summary": "Find a user domain provider given an email address",
                "tags": [
                    "user domains"
                ]
            }
        },
        "/users/{userId}": {
            "get": {
                "operationId": "getUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Get user details",
                "tags": [
                    "users"
                ]
            },
            "put": {
                "operationId": "updateUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": "default response"
                    }
                },
                "security": [
                    {
                        "OAuth2": [
                            "read",
                            "write"
                        ]
                    }
                ],
                "summary": "Update user",
                "tags": [
                    "users"
                ]
            }
        }
    },
    "servers": [
        {
            "url": "https://api.prd.pureport.com"
        }
    ]
}